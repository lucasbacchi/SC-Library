{"version":3,"file":"ajax.bundle.js","mappings":"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","sources":["webpack://sc-library/webpack/bootstrap","webpack://sc-library/webpack/runtime/define property getters","webpack://sc-library/webpack/runtime/global","webpack://sc-library/webpack/runtime/hasOwnProperty shorthand","webpack://sc-library/webpack/runtime/make namespace object","webpack://sc-library/./node_modules/@firebase/util/dist/index.esm2017.js","webpack://sc-library/./node_modules/@firebase/component/dist/esm/index.esm2017.js","webpack://sc-library/./node_modules/@firebase/logger/dist/esm/index.esm2017.js","webpack://sc-library/./node_modules/idb/build/wrap-idb-value.js","webpack://sc-library/./node_modules/idb/build/index.js","webpack://sc-library/./node_modules/@firebase/app/dist/esm/index.esm2017.js","webpack://sc-library/./node_modules/@firebase/app-compat/dist/esm/index.esm2017.js","webpack://sc-library/./node_modules/firebase/compat/app/dist/index.esm.js","webpack://sc-library/./public/js/ajax.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    return typeof indexedDB === 'object';\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\r\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\r\n    const deferredPromise = new Deferred();\r\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\r\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\r\n    return deferredPromise.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\r\nconst uuidv4 = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, uuidv4, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, deepEqual, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.7.29\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.9.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"bad-app-name\" /* BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"storage-open\" /* STORAGE_OPEN */]: 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    [\"storage-get\" /* STORAGE_GET */]: 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    [\"storage-set\" /* STORAGE_WRITE */]: 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    [\"storage-delete\" /* STORAGE_DELETE */]: 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(options, rawConfig = {}) {\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME);\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"storage-open\" /* STORAGE_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    var _a;\r\n    try {\r\n        const db = await getDbPromise();\r\n        return db\r\n            .transaction(STORE_NAME)\r\n            .objectStore(STORE_NAME)\r\n            .get(computeKey(app));\r\n    }\r\n    catch (e) {\r\n        throw ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n            originalErrorMessage: (_a = e) === null || _a === void 0 ? void 0 : _a.message\r\n        });\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    var _a;\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        return tx.done;\r\n    }\r\n    catch (e) {\r\n        throw ERROR_FACTORY.create(\"storage-set\" /* STORAGE_WRITE */, {\r\n            originalErrorMessage: (_a = e) === null || _a === void 0 ? void 0 : _a.message\r\n        });\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (this._heartbeatsCache === null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (this._heartbeatsCache === null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            return idbHeartbeatObject || { heartbeats: [] };\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { ErrorFactory, contains, deepExtend, createSubscribe, isBrowser } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport * as modularAPIs from '@firebase/app';\nimport { _addComponent, deleteApp, _DEFAULT_ENTRY_NAME, _addOrOverwriteComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(_delegate, firebase) {\r\n        this._delegate = _delegate;\r\n        this.firebase = firebase;\r\n        // add itself to container\r\n        _addComponent(_delegate, new Component('app-compat', () => this, \"PUBLIC\" /* PUBLIC */));\r\n        this.container = _delegate.container;\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        return this._delegate.automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this._delegate.automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        return this._delegate.name;\r\n    }\r\n    get options() {\r\n        return this._delegate.options;\r\n    }\r\n    delete() {\r\n        return new Promise(resolve => {\r\n            this._delegate.checkDestroyed();\r\n            resolve();\r\n        }).then(() => {\r\n            this.firebase.INTERNAL.removeApp(this.name);\r\n            return deleteApp(this._delegate);\r\n        });\r\n    }\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    _getService(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        var _a;\r\n        this._delegate.checkDestroyed();\r\n        // Initialize instance if InstatiationMode is `EXPLICIT`.\r\n        const provider = this._delegate.container.getProvider(name);\r\n        if (!provider.isInitialized() &&\r\n            ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === \"EXPLICIT\" /* EXPLICIT */) {\r\n            provider.initialize();\r\n        }\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return provider.getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    }\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get it again.\r\n     *\r\n     * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    _removeServiceInstance(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        this._delegate.container\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            .getProvider(name)\r\n            .clearInstance(instanceIdentifier);\r\n    }\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     * @internal\r\n     */\r\n    _addComponent(component) {\r\n        _addComponent(this._delegate, component);\r\n    }\r\n    _addOrOverwriteComponent(component) {\r\n        _addOrOverwriteComponent(this._delegate, component);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\r\n            options: this.options\r\n        };\r\n    }\r\n}\r\n// TODO: investigate why the following needs to be commented out\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n//   FirebaseAppImpl.prototype.delete ||\r\n//   console.log('dc');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app-compat', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    const apps = {};\r\n    // // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    // const components = new Map<string, Component<any>>();\r\n    // A namespace is a plain JavaScript Object.\r\n    const namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeAppCompat,\r\n        // @ts-ignore\r\n        app,\r\n        registerVersion: modularAPIs.registerVersion,\r\n        setLogLevel: modularAPIs.setLogLevel,\r\n        onLog: modularAPIs.onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: modularAPIs.SDK_VERSION,\r\n        INTERNAL: {\r\n            registerComponent: registerComponentCompat,\r\n            removeApp,\r\n            useAsService,\r\n            modularAPIs\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || modularAPIs._DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    /**\r\n     * Create a new App instance (name must be unique).\r\n     *\r\n     * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n     */\r\n    function initializeAppCompat(options, rawConfig = {}) {\r\n        const app = modularAPIs.initializeApp(options, rawConfig);\r\n        if (contains(apps, app.name)) {\r\n            return apps[app.name];\r\n        }\r\n        const appCompat = new firebaseAppImpl(app, namespace);\r\n        apps[app.name] = appCompat;\r\n        return appCompat;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(name => apps[name]);\r\n    }\r\n    function registerComponentCompat(component) {\r\n        const componentName = component.name;\r\n        const componentNameWithoutCompat = componentName.replace('-compat', '');\r\n        if (modularAPIs._registerComponent(component) &&\r\n            component.type === \"PUBLIC\" /* PUBLIC */) {\r\n            // create service namespace for public components\r\n            // The Service namespace is an accessor function ...\r\n            const serviceNamespace = (appArg = app()) => {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentNameWithoutCompat] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentNameWithoutCompat]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                deepExtend(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentNameWithoutCompat] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentNameWithoutCompat] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function (...args) {\r\n                    const serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        return component.type === \"PUBLIC\" /* PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentNameWithoutCompat]\r\n            : null;\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        const useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = Object.assign(Object.assign({}, namespace.INTERNAL), { createFirebaseNamespace,\r\n        extendNamespace,\r\n        createSubscribe,\r\n        ErrorFactory,\r\n        deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        deepExtend(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nconst firebase$1 = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app-compat');\n\nconst name = \"@firebase/app-compat\";\nconst version = \"0.1.30\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    // Register `app` package.\r\n    registerVersion(name, version, variant);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif (isBrowser() && self.firebase !== undefined) {\r\n    logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\r\n    // eslint-disable-next-line\r\n    const sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\r\n    }\r\n}\r\nconst firebase = firebase$1;\r\nregisterCoreComponents();\n\nexport { firebase as default };\n//# sourceMappingURL=index.esm2017.js.map\n","import firebase from '@firebase/app-compat';\nexport { default } from '@firebase/app-compat';\n\nvar name = \"firebase\";\nvar version = \"9.9.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfirebase.registerVersion(name, version, 'app-compat');\n//# sourceMappingURL=index.esm.js.map\n","/*\r\nimport { } from \"https://www.gstatic.com/firebasejs/9.9.1/firebase-app.js\"\r\nimport { } from \"https://www.gstatic.com/firebasejs/9.9.1/firebase-analytics.js\"\r\nimport { } from \"https://www.gstatic.com/firebasejs/9.9.1/firebase-app-check.js\"\r\nimport { } from \"https://www.gstatic.com/firebasejs/9.9.1/firebase-auth.js\"\r\nimport { } from \"https://www.gstatic.com/firebasejs/9.9.1/firebase-firestore.js\"\r\nimport { } from \"https://www.gstatic.com/firebasejs/9.9.1/firebase-storage.js\"\r\nimport { } from \"https://www.gstatic.com/firebasejs/9.9.1/firebase-performance.js\"\r\n*/\r\n\r\n// v9 compat packages are API compatible with v8 code\r\n\r\nconsole.log(\"First Line in ajax.js!\");\r\ndebugger;\r\nconsole.log(\"After debugger...\");\r\nconsole.log(\"Another one!!!\");\r\nimport { initializeApp } from 'firebase/compat/app';\r\n/*import {} from 'firebase/compat/analytics';\r\nimport {} from 'firebase/compat/app-check';\r\nimport {} from 'firebase/compat/auth';\r\nimport {} from 'firebase/compat/firestore';\r\nimport {} from 'firebase/compat/storage';\r\nimport {} from 'firebase/compat/performance';*/\r\n\r\n\r\n\r\n\r\n//import { initApp } from \"./main\";\r\n\r\nvar url = window.location.href;\r\nvar path = window.location.pathname;\r\nvar query = window.location.search;\r\nvar hash = window.location.hash;\r\nvar fullExtension = path + query + hash;\r\n\r\n\r\n// Search Content folder\r\nvar directory = [\r\n    \"/account/overview\",\r\n    \"/account/notifications\",\r\n    \"/account/checkouts\",\r\n    \"/account/security\",\r\n    \"/admin/barcode\",\r\n    \"/admin/editEntry\",\r\n    \"/admin/editUser\",\r\n    \"/admin/inventory\",\r\n    \"/admin/main\",\r\n    \"/admin/report\",\r\n    \"/admin/view\",\r\n    \"/404\",\r\n    \"/about\",\r\n    \"/account\",\r\n    \"/advancedSearch\",\r\n    \"/autogenindex\",\r\n    \"/help\",\r\n    \"/login\",\r\n    \"/main\",\r\n    \"/result\",\r\n    \"/search\",\r\n    \"/signup\",\r\n    \"/sitemap\"\r\n];\r\nvar loadedSources = [];\r\n\r\n// Go to the correct page when the page loads\r\n$(document).ready(function () {\r\n    debugger;\r\n    initApp()\r\n    .then(function() {\r\n        const appCheck = firebase.appCheck();\r\n        // Pass your reCAPTCHA v3 site key (public key) to activate(). Make sure this\r\n        // key is the counterpart to the secret key you set in the Firebase console.\r\n        appCheck.activate('6LcpTm0bAAAAALfsopsnY-5aX2BC7nAukEDHtKDu');\r\n        goToPage(fullExtension.substr(1), true);\r\n    }, function(error) {\r\n        console.error(error);\r\n    });\r\n});\r\n\r\n\r\n\r\n\r\n\r\nvar currentPage;\r\nvar currentPanel;\r\n\r\nvar currentHash;\r\nvar currentQuery = \"\";\r\nvar currentExtension;\r\n{\r\n    let isAdmin;\r\n    function isAdminCheck(recheck = false) {\r\n        return new Promise(function (resolve, reject) {\r\n            if (isAdmin == null || recheck) {\r\n                firebase.firestore().collection(\"admin\").doc(\"private_vars\").get().then((doc) => {\r\n                    isAdmin = true;\r\n                    resolve(true);\r\n                }).catch((error) => {\r\n                    isAdmin = false;\r\n                    reject(false);\r\n                });\r\n            } else {\r\n                if (isAdmin) {\r\n                    resolve(true);\r\n                } else {\r\n                    reject(false);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    function goToPage(pageName, goingBack = false, searchResultsArray = null) {\r\n        return new Promise (function (resolve, reject) {\r\n            // If there is any reason for the user to not leave a page, then it will reject.\r\n            // Currently, this handles unsaved changes on the edit entry page.\r\n            // TODO: Add more\r\n            if (currentPage == \"/admin/editEntry\" && unSavedChangesEditEntry()) {\r\n                // It's fine to call it regardless because it will only call if the first argument is true.\r\n                reject(\"The User attempted to leave the page without saving.\");\r\n                return;\r\n            }\r\n\r\n            $(\"#content\").removeClass(\"fade\");\r\n            if ($(window).width() <= 570) {\r\n                closeNavMenu();\r\n            }\r\n            closeLargeAccount();\r\n\r\n            var pageHash = \"\";\r\n            var pageQuery = \"\";\r\n            var pageExtension = \"\";\r\n\r\n            // This removes the hash if one was passed in and stores it to a separate variable.\r\n            if (pageName.includes(\"#\")) {\r\n                pageHash = pageName.substr(pageName.indexOf(\"#\"), pageName.length);\r\n                pageName = pageName.substr(0, pageName.indexOf(\"#\"));\r\n            }\r\n\r\n            // This removes the query if one was passed in and stores it to a separate variable.\r\n            if (pageName.includes(\"?\")) {\r\n                pageQuery = pageName.substr(pageName.indexOf(\"?\"), pageName.length);\r\n                pageName = pageName.substr(0, pageName.indexOf(\"?\"));\r\n            }\r\n\r\n            // This removes the file extension if one was passed in and stores it to a separate variable.\r\n            if (pageName.includes(\".\")) {\r\n                pageExtension = pageName.substr(pageName.indexOf(\".\"), pageName.length);\r\n                pageName = pageName.substr(0, pageName.indexOf(\".\"));\r\n            }\r\n\r\n            // This removes an ending slash if one was mistakenly included\r\n            if (pageName.substring(pageName.length - 1) == \"/\") {\r\n                pageName = pageName.substring(0, pageName.length - 1);\r\n            }\r\n\r\n            if (pageName == \"\" || pageName == \"index.html\" || pageName == \"index\") {\r\n                pageName = \"main\";\r\n            }\r\n\r\n            if (pageName == \"admin\") {\r\n                goToPage(\"admin/main\");\r\n                pageName = \"admin/main\";\r\n                return;\r\n            }\r\n\r\n            pageName = \"/\" + pageName;\r\n\r\n            // Prevent users from going to the same page (just don't reload the content if you do)\r\n            if (currentPage && ((pageName == currentPage && pageName != \"/search\") || (pageName == \"/search\" && findURLValue(currentQuery, \"query\", true) == findURLValue(pageQuery, \"query\", true) && findURLValue(pageQuery, \"query\", true) != \"\"))) {\r\n                // TODO: Remove when I know it's not going to break everything\r\n\r\n                console.log(\"The user attempted to view the current page, and it was blocked.\");\r\n                return;\r\n            }\r\n\r\n            // Prevent users from viewing admin pages without having admin privilages\r\n            if (!pageName.includes(\"admin\")) {\r\n                // Prevent users from going to the sign in/up page if they are signed in\r\n                if (!pageName.includes(\"login\") && !pageName.includes(\"signup\")) {\r\n                    getPage(pageName);\r\n                } else {\r\n                    // TO DO: Might have broken reauth.\r\n                    if (firebase.auth().currentUser != null) {\r\n                        goToPage(\"\");\r\n                        return;\r\n                    } else {\r\n                        getPage(pageName);\r\n                    }\r\n                }\r\n            } else {\r\n                isAdminCheck(true).then((isAdmin) => {\r\n                    getPage(pageName);\r\n                }).catch((error) => {\r\n                    goToPage(\"\");\r\n                    return;\r\n                })\r\n            }\r\n\r\n            \r\n            \r\n            isAdminCheck(currentPage == \"/login\" ? true : false).catch((error) => {\r\n                console.error(error);\r\n            }).then((result) => {\r\n                if (result && !$(\"#admin-link\").length) {                \r\n                    $(\"#account-information-container\").append(\"<a id=\\\"admin-link\\\" onclick=\\\"javascript:goToPage(\\'admin/main\\');\\\">Admin Dashboard</a>\");\r\n                }\r\n            });\r\n\r\n            function getPage(pageName) {\r\n\r\n                const xhttp = new XMLHttpRequest();\r\n                if (directory.includes(pageName)) {\r\n                    xhttp.open(\"GET\", \"/content\" + pageName + \".html\", true); // removed sending the hash/query (I don't see why we'd need the server to know it...)\r\n                } else {\r\n                    xhttp.open(\"GET\", \"/content/404.html\", true);\r\n                }\r\n                xhttp.send();\r\n\r\n                // Set the content of the page\r\n                xhttp.onreadystatechange = function () {\r\n    \r\n                    if (this.readyState == 4 && this.status == 200) {\r\n                        if (currentPage != pageName) {\r\n                            $('#content').addClass(\"fade\");\r\n                        }\r\n                        \r\n\r\n                        var pageUrl = pageName;\r\n                        if (pageUrl == \"/index.html\" || pageUrl == \"/index\" || pageUrl == \"/main\" || pageUrl == \"/main.html\") {\r\n                            pageUrl = \"../\";\r\n                        }\r\n\r\n                        // The account pages handle their own states because they are panels\r\n                        if (!goingBack && !pageName.includes(\"account\")) {\r\n                            window.history.pushState({}, \"\", pageUrl + pageQuery + pageHash);\r\n                        }\r\n\r\n                        document.getElementById(\"content\").innerHTML = xhttp.responseText;\r\n                        // Remove Placeholder Height\r\n                        document.getElementById(\"content\").style.height = \"100%\";\r\n\r\n                        // Set Title Correctly\r\n                        var titleList = {\r\n                            \"/admin/editEntry\": \"Edit an Entry\",\r\n                            \"/admin/main\": \"Admin Console\",\r\n                            \"/admin/report\": \"Run a Report\",\r\n                            \"/admin/barcode\": \"Generate Barcodes\",\r\n                            \"/admin/view\": \"View Database\",\r\n                            \"/admin/editUser\": \"Edit a User\",\r\n                            \"/admin/inventory\": \"Conduct Inventory\",\r\n                            \"/404\": \"404 | File Not Found\",\r\n                            \"/about\": \"About Us\",\r\n                            \"/account\": \"Your Account\",\r\n                            \"/advancedSearch\": \"Advanced Search\",\r\n                            \"/autogenindex\": \"LEAVE\",\r\n                            \"/help\": \"Help\",\r\n                            \"/login\": \"Login\",\r\n                            \"/main\": \"Home\",\r\n                            \"/result\": \"Search Result\", // This will get changed on the page to be specific to the title.\r\n                            \"/search\": \"Search Results\",\r\n                            \"/signup\": \"Signup\",\r\n                            \"/sitemap\": \"Sitemap\"\r\n                        }\r\n\r\n                        // Add Titles baseed on page Name\r\n                        if (titleList[pageName] != undefined) {\r\n                            changePageTitle(titleList[pageName], false);\r\n                        } else if (pageUrl == \"./\") {\r\n                            changePageTitle(\"Home\", false);\r\n                        } else {\r\n                            document.title = \"South Church Library Catalog\";\r\n                        }\r\n\r\n                        // Define what sources are required on each page\r\n                        // (excluding favicon.ico, ajax.js, main.js, and main.css)\r\n                        // These will always be loaded no matter what page.\r\n                        var sourcesRequired = {\r\n                            \"/admin/editEntry\": [\"form.css\", \"editEntry.js\", \"admin.js\", \"admin.css\"],\r\n                            \"/admin/main\": [\"admin.js\", \"admin.css\", \"editEntry.js\"],\r\n                            \"/admin/report\": [\"admin.js\", \"admin.css\", \"report.js\"],\r\n                            \"/admin/barcode\": [\"admin.js\", \"admin.css\"],\r\n                            \"/admin/view\": [\"admin.js\", \"admin.css\", \"search.css\"],\r\n                            \"/admin/editUser\": [\"admin.js\", \"admin.css\"],\r\n                            \"/admin/inventory\": [\"admin.js\", \"admin.css\"],\r\n                            \"/404\": [],\r\n                            \"/about\": [],\r\n                            \"/account\": [\"account.js\", \"account.css\"],\r\n                            \"/advancedSearch\": [\"search.js\", \"search.css\"],\r\n                            \"/autogenindex\": [],\r\n                            \"/help\": [],\r\n                            \"/login\": [\"signIn.js\"],\r\n                            \"/main\": [],\r\n                            \"/result\": [\"search.js\", \"search.css\"],\r\n                            \"/search\": [\"search.js\", \"search.css\"],\r\n                            \"/signup\": [\"signIn.js\"],\r\n                            \"/sitemap\": [\"sitemap.js\"]\r\n                        }\r\n\r\n                        // Get an array of currently loaded Additional Resources like JS and CSS\r\n                        // Iterate through the currently loaded css files\r\n                        $('head > link.appended').each(function (index) {\r\n                            // Get the href attribute of the link tag\r\n                            var href = $(this)[0].attributes.href.value;\r\n                            // If the source isn't in the list of loaded scoures, add it.\r\n                            if (!loadedSources.includes(href.substr(href.lastIndexOf('/') + 1, href.length))) {\r\n                                loadedSources.push(href.substr(href.lastIndexOf('/') + 1, href.length));\r\n                            }\r\n                        });\r\n                        // Iterate though the currently loaded js files\r\n                        $('body > script.appended').each(function (index) {\r\n                            // Get the src attribute of the script tag.\r\n                            var src = $(this)[0].attributes.src.value;\r\n                            // If the source isn't in the list of loaded scoures, add it.\r\n                            if (!loadedSources.includes(src.substr(src.lastIndexOf('/') + 1, src.length))) {\r\n                                loadedSources.push(src.substr(src.lastIndexOf('/') + 1, src.length));\r\n                            }\r\n                        });\r\n\r\n                        // Check if this page has every thing it needs. If not, load additional resources\r\n                        // Get the list of sources needed for the current page\r\n                        var sourcesForPage = sourcesRequired[pageName];\r\n                        // Correct the empty path if required, set it to main.\r\n                        if (pageName == \"/\" || pageName == \"/index.html\" || pageName == \"/index\") {\r\n                            sourcesForPage = sourcesRequired[\"/main\"];\r\n                        }\r\n                        // Itterate through each of the scources needed\r\n                        try {\r\n                            for (var i = 0; i < sourcesForPage.length; i++) {\r\n                                // If the source hasn't already been loaded.\r\n                                if (!loadedSources.includes(sourcesForPage[i])) {\r\n                                    // If the source is a js file:\r\n                                    if (sourcesForPage[i].substr(sourcesForPage[i].indexOf(\".\"), sourcesForPage[i].length) == \".js\") {\r\n                                        $('body').append('<script src=\"/js/' + sourcesForPage[i] + '\" class=\"appended\">');\r\n                                    }  \r\n                                    // If the source is a css file\r\n                                    else if (sourcesForPage[i].substr(sourcesForPage[i].indexOf(\".\"), sourcesForPage[i].length) == \".css\") {\r\n                                        $('head').append('<link rel=\"stylesheet\" href=\"/css/' + sourcesForPage[i] + '\" type=\"text/css\" class=\"appended\">');\r\n                                    } else {\r\n                                        console.error(\"SOURCE NEEDED COULD NOT BE FOUND!!\");\r\n                                    }\r\n                                }\r\n                            }\r\n                        } catch {\r\n                            console.warn(\"This page name does not exist in the source list.\");\r\n                        }\r\n\r\n                        // Page Content has now Loaded\r\n\r\n                        // Scroll to a specific part of the page if needed\r\n                        // If no hash, scroll to the top of the page.\r\n                        if (pageHash) {\r\n                            document.querySelector(pageHash).scrollIntoView();\r\n                        } else {\r\n                            if (currentPage != pageName) {\r\n                                $(document).scrollTop(0); // Could change later if we don't like this behavior\r\n                            }\r\n                        }\r\n\r\n                        \r\n                        // Fire Additional Scripts based on Page\r\n                        if (pageName == \"/main\") {\r\n                            setupMain();\r\n                        }\r\n\r\n                        if (pageName == \"/login\" || pageName == \"/signup\") {\r\n                            setupSignIn(pageQuery);\r\n                        }\r\n\r\n                        if (pageName == \"/search\") {\r\n                            setupSearch(searchResultsArray, pageQuery);\r\n                        }\r\n\r\n                        if (pageName == \"/result\") {\r\n                            setupResults(pageQuery);\r\n                        }\r\n\r\n                        if (pageName == \"/account\") {\r\n                            accountPageSetup(pageQuery, goingBack);\r\n                        } else {\r\n                            currentPanel = null;\r\n                        }\r\n\r\n                        if (pageName == \"/admin/main\") {\r\n                            setupAdminMain();\r\n                        }\r\n\r\n                        if (pageName == \"/admin/editEntry\") {\r\n                            setupEditEntry(pageQuery);\r\n                        }\r\n\r\n                        if (pageName == \"/admin/editUser\") {\r\n                            setupEditUser(pageQuery);\r\n                        }\r\n\r\n                        if (pageName == \"/admin/view\") {\r\n                            setupView(pageQuery);\r\n                        }\r\n\r\n                        if (pageName == \"/admin/report\") {\r\n                            setupReport(pageQuery);\r\n                        }\r\n\r\n                        if (pageName == \"/admin/inventory\") {\r\n                            setupInventory(pageQuery);\r\n                        }\r\n\r\n                        if (pageName == \"/admin/barcode\") {\r\n                            setupBarcodePage();\r\n                        }\r\n\r\n                        if (pageName == \"/sitemap\") {\r\n                            sitemapSetup();\r\n                        }\r\n                        \r\n                        /* TRYING THIS IN A .THEN We'll see how that goes...\r\n                        // Give the CSS time to apply - FIX THIS METHODOLOGY\r\n                        setTimeout(function() {\r\n                            $(\"#cover\").hide();\r\n                            $(\"body\").addClass(\"fade\");\r\n                            $(\"body\").css('overflow', '');\r\n                        }, 200);*/\r\n                        \r\n                                    \r\n                        currentPage = pageName;\r\n                        currentHash = pageHash;\r\n                        currentQuery = pageQuery;\r\n                        currentExtension = pageExtension;\r\n                        // Ideally this doesn't resolve until everything is redrawn... Not sure if that's how it's going to work\r\n                        resolve();\r\n                    }\r\n                }\r\n            }\r\n        }).then(() => {\r\n            $(\"#cover\").hide();\r\n            $(\"body\").addClass(\"fade\");\r\n            $(\"body\").css('overflow', '');\r\n        }).catch((error) => {\r\n            console.error(\"goToPage function failed: \" + error);\r\n        });\r\n        \r\n    }\r\n}\r\n\r\n// Catch History Events such as forward and back and then go to those pages\r\nwindow.onpopstate = function (event) {\r\n    handleHistoryPages();\r\n};\r\n\r\nfunction handleHistoryPages() {\r\n    let path = document.location.pathname.substring(1);\r\n    let search = document.location.search;\r\n    let hash = document.location.hash;\r\n    goToPage(path + search + hash, true);\r\n}\r\n\r\nfunction changePageTitle (newTitle, append = true) {\r\n    if (newTitle == \"\") {\r\n        document.title = \"South Church Library Catalog\";\r\n    } else {\r\n        if (append) {\r\n            var currentTitle = document.title;\r\n            document.title = newTitle + \" | \" + currentTitle;\r\n        } else {\r\n            document.title = newTitle + \" | South Church Library Catalog\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconsole.log(\"ajax.js has Loaded!\");\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","stringToByteArray$1","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","deepExtend","target","source","constructor","Date","getTime","undefined","Deferred","reject","resolve","promise","Promise","wrapCallback","callback","error","catch","FirebaseError","code","message","customData","super","name","setPrototypeOf","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","PATTERN","_","replaceTemplate","fullMessage","contains","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","observers","unsubscribes","observerCount","task","finalized","then","next","forEachObserver","observer","close","complete","nextOrObserver","methods","method","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","fn","sendOne","console","err","Component","instanceFactory","type","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","DEFAULT_ENTRY_NAME","Provider","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","options","_a","optional","getComponent","setComponent","isComponentEager","instanceDeferred","entries","clearInstance","delete","async","services","from","values","all","filter","map","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","args","logLevel","now","toISOString","Logger","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","debug","log","info","warn","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","transformCachableValue","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","apply","unwrap","storeNames","tx","sort","done","unlisten","removeEventListener","DOMException","addEventListener","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","Proxy","IDBRequest","request","success","result","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","index","shift","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","isVersionServiceProvider","library","version","logString","name$o","version$1","logger","PLATFORM_LOG_STRING","_apps","_components","_addComponent","app","_addOrOverwriteComponent","_registerComponent","componentName","_getProvider","heartbeatController","triggerHeartbeat","_removeServiceInstance","_clearComponents","clear","ERROR_FACTORY","FirebaseAppImpl","config","_isDeleted","_options","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","SDK_VERSION","initializeApp","rawConfig","existingApp","newApp","getApp","getApps","deleteApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","match","versionMismatch","warning","onLog","logCallback","customLogLevel","level","arg","toString","JSON","stringify","ignored","toLowerCase","setUserLogHandler","forEach","inst","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","writeHeartbeatsToIndexedDB","heartbeatObject","put","computeKey","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","extractHeartbeatsForHeader","headerString","substring","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","preExist","DB_CHECK_NAME","self","onsuccess","deleteDatabase","onupgradeneeded","onerror","readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","_delegate","firebase","removeApp","_getService","toJSON","firebase$1","createFirebaseNamespace","namespace","firebaseAppImpl","apps","__esModule","appCompat","registerComponent","componentNameWithoutCompat","serviceNamespace","appArg","useAsService","modularAPIs","createFirebaseNamespaceCore","extendNamespace","sdkVersion","indexOf","location","href","fullExtension","pathname","search","hash","$","document","ready","initApp","appCheck","activate","goToPage","substr","onpopstate","path","handleHistoryPages"],"sourceRoot":""}