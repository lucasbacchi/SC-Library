{"version":3,"file":"public_js_admin_js.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAA2C;AACT;AAC4D;AACjD;AAC7C;AACO;AACP,IAAI,CAAC;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL,QAAQ,+CAAQ;AAChB,KAAK;AACL;AACA,IAAI,CAAC;AACL,QAAQ,+CAAQ;AAChB,KAAK;AACL;AACA,IAAI,CAAC;AACL,QAAQ,+CAAQ;AAChB,KAAK;AACL;AACA,IAAI,CAAC;AACL,QAAQ,+CAAQ;AAChB,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL,QAAQ,+CAAQ;AAChB,KAAK;AACL;AACA,IAAI,CAAC;AACL,QAAQ,+CAAQ;AAChB,KAAK;AACL;AACA,IAAI,CAAC;AACL,QAAQ,+CAAQ;AAChB,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,eAAe,CAAC;AAChB,gBAAgB,mDAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAQ;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,+CAAQ;AAChB,KAAK;AACL;AACA;AACA;AACA,eAAe,CAAC;AAChB,gBAAgB,mDAAU;AAC1B;AACA;AACA;AACA;AACA,0BAA0B,CAAC;AAC3B,IAAI,2DAAkB;AACtB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,YAAY,CAAC;AACb,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sBAAsB,CAAC;AACvB;AACA;AACA,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT,QAAQ,+CAAM;AACd;AACA,gBAAgB,CAAC;AACjB,cAAc;AACd;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,QAAQ,CAAC,iDAAiD,qDAAY;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mDAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,uDAAiB;AAC7B,uCAAuC,mDAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,wBAAwB,mDAAa;AACrC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,wCAAwC,mDAAa;AACrD;AACA;AACA;AACA;AACA,4CAA4C,qBAAqB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB;AACA,sBAAsB;AACtB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,2CAA2C,mDAAa;AACxD,mCAAmC,2FAAwC;AAC3E;AACA;AACA;AACA,4CAA4C,qBAAqB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mDAAa;AACjB;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C,iCAAiC,wEAAwE;AACzG;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA,wBAAwB,CAAC,gDAAgD,qDAAY;AACrF;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,+CAAM;AACV,QAAQ,0DAAoB;AAC5B;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,CAAC;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,0DAAoB;AACxB;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,+CAAM;AACV,sCAAsC,oDAAoD,kDAAY;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,CAAC;AACT;AACA,YAAY,CAAC;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP,eAAe,qDAAY;AAC3B;AACA,QAAQ,+CAAM;AACd,YAAY,0DAAoB;AAChC;AACA,oBAAoB,CAAC,sCAAsC,qDAAY;AACvE,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,MAAM;AACN;AACA;AACA,gBAAgB,CAAC;AACjB,aAAa;AACb,SAAS;AACT,MAAM;AACN;AACA,QAAQ,+CAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+CAAQ;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC,QAAQ,mDAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI,mDAAa;AACjB;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,0BAA0B,CAAC;AAC3B,YAAY,CAAC;AACb,SAAS;AACT,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC,QAAQ,mDAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,IAAI,CAAC;AACL,IAAI,CAAC;AACL;AACA;AACA;AACA,IAAI,+CAAM;AACV,IAAI,CAAC;AACL,IAAI,CAAC;AACL,IAAI,CAAC;AACL,IAAI,CAAC;AACL,QAAQ,CAAC;AACT,KAAK;AACL,IAAI,CAAC;AACL,IAAI,CAAC;AACL,IAAI,CAAC;AACL;AACA,YAAY,CAAC;AACb,gBAAgB,CAAC;AACjB;AACA,gBAAgB,mDAAa;AAC7B,2BAA2B,2FAAwC,CAAC,CAAC;AACrE,iBAAiB;AACjB;AACA;AACA,KAAK;AACL","sources":["webpack://sc-library/./public/js/admin.js"],"sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport { goToPage } from \"./ajax\";\r\nimport { search, buildBookBox, findURLValue, getBookFromBarcode, verifyISBN } from \"./common\";\r\nimport { bookDatabase, db } from \"./globals\";\r\n\r\nexport function setupAdminMain() {\r\n    $(\"#edit-entry-input\").on(\"keydown\", (event) => {\r\n        if (event.key === \"Enter\") {\r\n            adminSearch();\r\n        }\r\n    });\r\n\r\n    $(\"#add-entry-isbn\").on(\"keydown\", (event) => {\r\n        if (event.key === \"Enter\") {\r\n            addEntry();\r\n        }\r\n    });\r\n\r\n    $(\"#add-entry-without-isbn\").on(\"click\", () => {\r\n        addEntryWithoutISBN();\r\n    });\r\n\r\n    $(\"#add-entry-with-specific-barcode-number-button\").on(\"click\", () => {\r\n        addEntryWithSpecificBarcodeNumber();\r\n    });\r\n\r\n    $(\"#circulation-report-link\").on(\"click\", () => {\r\n        goToPage('admin/report?type=circulation');\r\n    });\r\n\r\n    $(\"#purchases-report-link\").on(\"click\", () => {\r\n        goToPage('admin/report?type=purchases');\r\n    });\r\n\r\n    $(\"#removed-report-link\").on(\"click\", () => {\r\n        goToPage('admin/report?type=removed');\r\n    });\r\n\r\n    $(\"#inventory-link\").on(\"click\", () => {\r\n        goToPage('admin/inventory');\r\n    });\r\n\r\n    $(\"#view-missing-barcodes\").on(\"click\", () => {\r\n        viewMissingBarcodes();\r\n    });\r\n\r\n    $(\"#view-all-books\").on(\"click\", () => {\r\n        goToPage('admin/view?type=books');\r\n    });\r\n\r\n    $(\"#view-all-users\").on(\"click\", () => {\r\n        goToPage('admin/view?type=users');\r\n    });\r\n\r\n    $(\"#barcode-link\").on(\"click\", () => {\r\n        goToPage('admin/barcode');\r\n    });\r\n\r\n    $(\"#import-link\").on(\"click\", () => {\r\n        uploadDatabase();\r\n    });\r\n\r\n    $(\"#import-input\").on(\"change\", (event) => {\r\n        setUploadDatabase(event);\r\n    });\r\n\r\n    $(\"#export-link\").on(\"click\", () => {\r\n        downloadDatabase();\r\n    });\r\n\r\n    $(\"#add-entry-button\").on(\"click\", () => {\r\n        addEntry();\r\n    });\r\n\r\n    $(\"#edit-entry-search\").on(\"click\", () => {\r\n        adminSearch();\r\n    });\r\n\r\n    recentlyCheckedOut();\r\n    addStats();\r\n}\r\n\r\nexport function setupEditUser() {\r\n    console.error(\"TODO: Write this function\");\r\n}\r\n\r\n\r\nfunction addEntry() {\r\n    var isbn = $(\"#add-entry-isbn\").val();\r\n    var check = verifyISBN(isbn);\r\n    if (!check) {\r\n        alert(\"The number you entered is not a valid ISBN Number.\");\r\n        return;\r\n    }\r\n    createEntry().then((newBarcode) => {\r\n        // TO DO: As a nice to have, we could convert between them and add a check digit here to improve reliability\r\n        goToPage(\"admin/editEntry?new=true&isbn=\" + isbn + \"&id=\" + newBarcode);\r\n    });\r\n}\r\n\r\nfunction addEntryWithoutISBN() {\r\n    createEntry().then((newBarcode) => {\r\n        goToPage(\"admin/editEntry?new=true&id=\" + newBarcode);\r\n    });\r\n}\r\n\r\nfunction addEntryWithSpecificBarcodeNumber() {\r\n    var isbn = $(\"#add-entry-isbn\").val();\r\n    var check = verifyISBN(isbn);\r\n    if (!check && isbn != \"\") {\r\n        alert(\"The number you entered is not a valid ISBN Number.\");\r\n        return;\r\n    }\r\n    var specificBarcode = $(\"#add-entry-with-specific-barcode-number\").val();\r\n    getBookFromBarcode(specificBarcode).then((book) => {\r\n        if (book.isDeleted || (book.title == \"\" && book.lastUpdated == null)) {\r\n            const a = document.createElement(\"a\");\r\n            if (isbn == \"\") {\r\n                a.href = \"/admin/editEntry?new=true&id=\" + specificBarcode;\r\n            } else {\r\n                a.href = \"/admin/editEntry?new=true&isbn=\" + isbn + \"&id=\" + specificBarcode;\r\n            }\r\n            a.innerHTML = \"Click here to overwrite the barcode above.\";\r\n            $(\"#add-entry\")[0].appendChild(a);\r\n        } else {\r\n            alert(\"You may not create a new book with this barcode. Please edit the book with that barcode normally.\");\r\n            return;\r\n        }\r\n    }).catch((barcodeNumber) => {\r\n        alert(\"Could not find a valid book at: \" + barcodeNumber);\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction adminSearch() {\r\n    var searchQuery = $(\"#edit-entry-input\").val();\r\n\r\n    if (searchQuery) {\r\n        $(\"#edit-entry-search-results\").show();\r\n        $(\"#edit-entry-search-results\").empty();\r\n        search(searchQuery, undefined, undefined, true).then((results) => {\r\n            if (results.length == 0) {\r\n                $(\"#edit-entry-search-results\").html(\"Your search returned no results. Please try again.\");\r\n            } else {\r\n                adminBookBoxes(results);\r\n            }\r\n        });\r\n    } else {\r\n        alert(\"Please enter a search query\");\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction adminBookBoxes(objects) {\r\n    for (let i = 0; i < objects.length; i++) {\r\n        $(\"div#edit-entry-search-results\")[0].appendChild(buildBookBox(objects[i], \"edit-entry\"));\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction createEntry() {\r\n    return new Promise(function (resolve, reject) {\r\n        // Run a Transaction to ensure that the correct barcode is used. (Atomic Transation)\r\n        var lastBookDocQuery = db.collection(\"books\").where(\"order\", \">=\", 0).orderBy(\"order\", \"desc\").limit(1);\r\n        lastBookDocQuery.get().then((querySnapshot) => {\r\n            var topDoc;\r\n            querySnapshot.forEach((doc) => {\r\n                if (!doc.exists()) {\r\n                    throw \"The books document doesn't exist\";\r\n                }\r\n                topDoc = doc;\r\n            });\r\n\r\n            db.runTransaction((transaction) => {\r\n                return transaction.get(db.collection(\"books\").doc(topDoc.id)).then((doc2) => {\r\n                    if (!doc2.exists) {\r\n                        throw \"Document does not exist!\";\r\n                    }\r\n\r\n                    var order = doc2.data().order;\r\n                    var numBooksInDoc = doc2.data().books.length;\r\n\r\n                    try {\r\n                        var next = order + 1;\r\n                        if (next < 10) {\r\n                            next = \"00\" + (next);\r\n                        } else if (next < 100) {\r\n                            next = \"0\" + (next);\r\n                        }\r\n                        db.collection(\"books\").doc(next).get().then((doc) => {\r\n                            if (doc.exists()) {\r\n                                console.error(\"A new book doc was created, it shouldn't have been, so abort!\");\r\n                                alert(\"A database error has occurred.\");\r\n                                throw \"Something went wrong.\";\r\n                            }\r\n                        }).catch((err) => {\r\n                            console.log(err, \"Hopefully the line before doesn't say that something went wrong.... If it didn't, the next document doesn't exist, which is a good thing.\");\r\n                        });\r\n                    } catch {\r\n                        console.log(\"Something about the try catch failed....\");\r\n                    }\r\n\r\n                    if (numBooksInDoc == 100) {\r\n                        // A new book doc has to be created...\r\n                        var newNumber = order + 1;\r\n                        if (newNumber < 10) {\r\n                            newNumber = \"00\" + newNumber;\r\n                        } else if (newNumber < 100) {\r\n                            newNumber = \"0\" + newNumber;\r\n                        }\r\n                        let barcode = \"11711\" + newNumber + \"00\";\r\n                        transaction.set(db.collection(\"books\").doc(newNumber), {\r\n                            books: [{\r\n                                barcodeNumber: barcode,\r\n                                title: \"\",\r\n                                subtitle: \"\",\r\n                                authors: [{ first: \"\", last: \"\" }],\r\n                                illustrators: [],\r\n                                medium: \"\",\r\n                                coverImageLink: \"\",\r\n                                thumbnailImageLink: null,\r\n                                subjects: [],\r\n                                description: \"\",\r\n                                audience: [false, false, false, false],\r\n                                isbn10: \"\",\r\n                                isbn13: \"\",\r\n                                publishers: [],\r\n                                publishDate: null,\r\n                                numberOfPages: 0,\r\n                                ddc: \"\",\r\n                                purchaseDate: null,\r\n                                purchasePrice: \"\",\r\n                                vendor: \"\",\r\n                                keywords: [],\r\n                                canBeCheckedOut: true,\r\n                                isDeleted: false,\r\n                                isHidden: true,\r\n                                lastUpdated: null\r\n                            }],\r\n                            order: order + 1\r\n                        });\r\n                        return barcode;\r\n                    } else {\r\n                        if (order < 10) {\r\n                            order = \"00\" + order;\r\n                        } else if (order < 100) {\r\n                            order = \"0\" + order;\r\n                        }\r\n\r\n                        let barcode;\r\n                        if (numBooksInDoc < 10) {\r\n                            barcode = \"11711\" + order + \"0\" + numBooksInDoc;\r\n                        } else {\r\n                            barcode = \"11711\" + order + numBooksInDoc;\r\n                        }\r\n                        transaction.update(db.collection(\"books\").doc(order), {\r\n                            books: firebase.firestore.FieldValue.arrayUnion({\r\n                                barcodeNumber: barcode,\r\n                                title: \"\",\r\n                                subtitle: \"\",\r\n                                authors: [{ first: \"\", last: \"\" }],\r\n                                illustrators: [],\r\n                                medium: \"\",\r\n                                coverImageLink: \"\",\r\n                                subjects: [],\r\n                                description: \"\",\r\n                                audience: [false, false, false, false],\r\n                                isbn10: \"\",\r\n                                isbn13: \"\",\r\n                                publishers: [],\r\n                                publishDate: null,\r\n                                numberOfPages: 0,\r\n                                ddc: \"\",\r\n                                purchaseDate: null,\r\n                                purchasePrice: \"\",\r\n                                vendor: \"\",\r\n                                keywords: [],\r\n                                canBeCheckedOut: true,\r\n                                isDeleted: false,\r\n                                isHidden: true,\r\n                                lastUpdated: null\r\n                            })\r\n                        });\r\n                        return barcode;\r\n                    }\r\n                });\r\n            }).then((newBarcode) => {\r\n                // After both writes complete, send the user to the edit page and take it from there.\r\n                console.log(\"New Entry Created with barcode: \", newBarcode);\r\n                // editEntry(newBarcode);\r\n                resolve(newBarcode);\r\n            });\r\n        }).catch((err) => {\r\n            console.error(err);\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\n\r\nvar input;\r\nvar input1;\r\nvar input2;\r\nvar canvas;\r\nvar ctx;\r\nexport function setupBarcodePage() {\r\n    canvas = document.getElementById(\"canvas\");\r\n    ctx = canvas.getContext(\"2d\");\r\n\r\n    $(\"#merge-one-barcode\").on(\"click\", () => {\r\n        mergeBarcodes();\r\n    });\r\n\r\n    $(\"#merge-multiple-barcodes\").on(\"click\", () => {\r\n        mergeBarcodes(true);\r\n    });\r\n}\r\n\r\nfunction mergeBarcodes(multiple = false) {\r\n    var numberOfBarcodes;\r\n    var currentBarcode;\r\n    if (!multiple) {\r\n        numberOfBarcodes = 1;\r\n        input = document.getElementById(\"barcode-single-input\").value;\r\n        input = \"11711\" + input;\r\n        currentBarcode = parseInt(input);\r\n        if (input.length != 10 || input.indexOf(\"11711\") == -1) {\r\n            alert(\"That barcode is not valid\");\r\n            return;\r\n        }\r\n    }\r\n    if (multiple) {\r\n        input1 = document.getElementById(\"barcode-multiple-input-start\").value;\r\n        input1 = \"11711\" + input1;\r\n        input2 = document.getElementById(\"barcode-multiple-input-end\").value;\r\n        input2 = \"11711\" + input2;\r\n        if (input1.length != 10 || input1.indexOf(\"11711\") == -1) {\r\n            alert(\"The starting barcode is not valid\");\r\n            return;\r\n        }\r\n        if (input2.length != 10 || input2.indexOf(\"11711\") == -1) {\r\n            alert(\"The ending barcode is not valid\");\r\n            return;\r\n        }\r\n        if (parseInt(input1) >= parseInt(input2)) {\r\n            alert(\"The ending barcode must be larger than the starting barcode\");\r\n            return;\r\n        }\r\n        numberOfBarcodes = parseInt(input2) - parseInt(input1) + 1;\r\n        currentBarcode = parseInt(input1);\r\n    }\r\n    for (let i = 0; i < numberOfBarcodes; i++) {\r\n        if (i != 0) {\r\n            currentBarcode++;\r\n        }\r\n        var imageObjArray = [];\r\n        var imageObjLoadedArray = [];\r\n        var delay = i * 1500 + (Math.floor(i / 5) * 2000);\r\n        setTimeout((currentBarcode, imageObjArray, imageObjLoadedArray, i, numberOfBarcodes) => {\r\n            if (i == numberOfBarcodes - 1) {\r\n                setTimeout(() => {\r\n                    alert(\"Download Complete\");\r\n                }, 2000);\r\n            }\r\n            let currentBarcodeString = currentBarcode.toString();\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.font = \"bold 60px Poppins\";\r\n            ctx.textAlign = \"center\";\r\n            // var textWidth = ctx.measureText(\"South Church Library\");\r\n            ctx.fillText(\"South Church Library\", (canvas.width / 2), 60);\r\n            var barcodeStyled = currentBarcodeString.substring(0, 1) + \"  \" + currentBarcodeString.substring(1, 5) + \"  \" + currentBarcodeString.substring(5, currentBarcodeString.length);\r\n            ctx.font = \"bold 78px Poppins\";\r\n            // textWidth = ctx.measureText(barcodeStyled);\r\n            ctx.fillText(barcodeStyled, (canvas.width / 2), 350);\r\n            ctx.font = \"45px Poppins\";\r\n            // textWidth = ctx.measureText(\"Andover, MA\");\r\n            ctx.translate(70, (canvas.height / 2) - 5);\r\n            ctx.rotate(270 * (Math.PI / 180));\r\n            ctx.fillText(\"Andover, MA\", 0, 0);\r\n            ctx.rotate(-270 * (Math.PI / 180));\r\n            ctx.translate(-70, -(canvas.height / 2) + 5);\r\n            ctx.font = \"45px Poppins\";\r\n            ctx.translate(1055, (canvas.height / 2) - 5);\r\n            ctx.rotate(90 * (Math.PI / 180));\r\n            ctx.fillText(\"Andover, MA\", 0, 0);\r\n            ctx.rotate(-90 * (Math.PI / 180));\r\n            ctx.translate(-1055, -(canvas.height / 2) + 5);\r\n\r\n            for (let i = 0; i < 12; i++) {\r\n                imageObjLoadedArray[i] = false;\r\n            }\r\n            for (let i = 0; i < 12; i++) {\r\n                imageObjArray.push(new Image());\r\n                loadBarcodeImage(i, imageObjArray, imageObjLoadedArray, currentBarcodeString);\r\n            }\r\n            imageObjArray[0].src = \"/img/barcode-parts/A.png\";\r\n            imageObjArray[11].src = \"/img/barcode-parts/B.png\";\r\n            for (let i = 1; i < 11; i++) {\r\n                var temp = currentBarcodeString.substring(i - 1, i);\r\n                imageObjArray[i].src = \"/img/barcode-parts/\" + temp + \".png\";\r\n            }\r\n        }, delay, currentBarcode, imageObjArray, imageObjLoadedArray, i, numberOfBarcodes);\r\n    }\r\n}\r\n\r\nfunction loadBarcodeImage(num, imageObjArray, imageObjLoadedArray, currentBarcodeString) {\r\n    imageObjArray[num].onload = function () {\r\n        // console.log(\"Image #\" + num + \" has loaded\");\r\n        ctx.globalAlpha = 1;\r\n        var position = 110 * 0.6 * num + 160;\r\n        if (num != 0) {\r\n            position += 10;\r\n        }\r\n        ctx.drawImage(imageObjArray[num], position, 95, imageObjArray[num].width * 0.6, imageObjArray[num].height * 0.6);\r\n        imageObjLoadedArray[num] = true;\r\n        var allLoaded = true;\r\n        for (let i = 0; i < 12; i++) {\r\n            if (imageObjLoadedArray[i]) {\r\n                continue;\r\n            } else {\r\n                allLoaded = false;\r\n            }\r\n        }\r\n        if (allLoaded) {\r\n            canvas.toBlob((blob) => {\r\n                var url = window.URL.createObjectURL(blob);\r\n                var a = document.getElementById(\"link\");\r\n                a.href = url;\r\n                a.download = currentBarcodeString + \".png\";\r\n                a.trigger(\"click\");\r\n                window.URL.revokeObjectURL(url);\r\n            });\r\n        }\r\n    };\r\n\r\n}\r\n\r\nfunction recentlyCheckedOut() {\r\n    var d = new Date(2021, 1, 1);\r\n    db.collection(\"users\").where(\"lastCheckoutTime\", \">\", d).orderBy(\"lastCheckoutTime\").limit(5).get().then((querySnapshot) => {\r\n        var bookTimes = [];\r\n        querySnapshot.forEach((doc) => {\r\n            var co = doc.data().checkouts;\r\n            for (let i = 0; i < co.length; i++) {\r\n                bookTimes.push({ book: co[i].bookRef, barcode: co[i].barcodeNumber, time: co[i].timeOut });\r\n                if (bookTimes.length == 6) {\r\n                    bookTimes.sort((a, b) => a.time - b.time);\r\n                    bookTimes.pop();\r\n                }\r\n            }\r\n        });\r\n        for (let i = 0; i < bookTimes.length; i++) {\r\n            var currentBook = bookTimes[i];\r\n            currentBook.book.get().then((doc) => {\r\n                if (!doc.exists()) {\r\n                    // TODO: When (or if) a book is deleted from the database, you can't try to get it. This may or may not be a problem after testing.\r\n                    console.error(\"doc does not exist\");\r\n                    return;\r\n                }\r\n                for (let j = 0; j < doc.data().books.length; j++) {\r\n                    if (doc.data().books[j].barcodeNumber == currentBook.barcode) {\r\n                        $(\"#checked-out-books-container\")[0].appendChild(buildBookBox(doc.data().books[j], \"admin\"));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction addStats() {\r\n    let count = 0;\r\n    search(\"\", 0, 0).then(() => {\r\n        bookDatabase.forEach((document) => {\r\n            // Iterate through each of the 10-ish docs\r\n            for (let i = 0; i < document.books.length; i++) {\r\n                // Iterate through each of the 100 books in each doc\r\n                var book = document.books[i];\r\n                if (book.isDeleted || book.barcodeNumber == 1171100000 || !book.lastUpdated) {\r\n                    continue;\r\n                }\r\n                count++;\r\n            }\r\n        });\r\n        $(\"#number-of-books\").html(count);\r\n    });\r\n}\r\n\r\nfunction viewMissingBarcodes() {\r\n    var missingArray = [];\r\n    bookDatabase.forEach((document) => {\r\n        // Iterate through each of the 10-ish docs\r\n        for (let i = 0; i < document.books.length; i++) {\r\n            // Iterate through each of the 100 books in each doc\r\n            var book = document.books[i];\r\n            if (book.barcodeNumber == 1171100000 || (book.lastUpdated && !book.isDeleted)) {\r\n                continue;\r\n            }\r\n            missingArray.push(book);\r\n        }\r\n    });\r\n    var message = \"The following Barcodes have been created, but they have never been updated:\\n\";\r\n    missingArray.forEach((book) => {\r\n        message += book.barcodeNumber + \"\\n\";\r\n    });\r\n    alert(message);\r\n}\r\n\r\nfunction downloadDatabase() {\r\n    search(\"\", 0, 0, true).then(() => {\r\n        var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(bookDatabase));\r\n        const a = document.createElement(\"a\");\r\n        a.style.display = \"none\";\r\n        a.id = \"download-database-link\";\r\n        a.download = \"database.json\";\r\n        a.href = dataStr;\r\n        a.innerHTML = \"Click Here to download the database\";\r\n        $(\"#content\")[0].appendChild(a);\r\n        window.setTimeout(() => {\r\n            $(\"#download-database-link\")[0].trigger(\"click\");\r\n        }, 500);\r\n    });\r\n}\r\n\r\nfunction uploadDatabase() {\r\n    $(\"#import-input\").trigger(\"click\");\r\n}\r\n\r\nfunction importFile(event) {\r\n    return new Promise(function (resolve) {\r\n        resolve(event.target.files[0]);\r\n    });\r\n}\r\n\r\nfunction setUploadDatabase() {\r\n    importFile.then((file) => {\r\n        var dataToUpload = JSON.parse(JSON.stringify(file));\r\n        console.log(dataToUpload);\r\n        alert(\"The database wasn't uploaded, because this function didn't get finished.\");\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nexport function setupView(pageQuery) {\r\n    var type = findURLValue(pageQuery, \"type\");\r\n    if (type == \"books\") {\r\n        search(\"\", 0, 0, true).then(() => {\r\n            bookDatabase.forEach((doc) => {\r\n                doc.books.forEach((book) => {\r\n                    $(\"div#view-container\")[0].appendChild(buildBookBox(book, \"view\"));\r\n                });\r\n            });\r\n        });\r\n    } else if (type == \"users\") {\r\n        getAllUsers().then(() => {\r\n            userDatabase.forEach((user) => {\r\n                $(\"div#view-container\")[0].appendChild(buildUserBox(user, \"view\"));\r\n            });\r\n        });\r\n    } else {\r\n        console.warn(\"There was no valid type to view.\");\r\n        goToPage(\"admin/main\");\r\n    }\r\n}\r\n\r\n\r\nfunction buildUserBox(obj, page, num = 0) {\r\n    const div = document.createElement(\"div\");\r\n    switch (page) {\r\n        case \"view\":\r\n            div.classList.add(\"result-listing\");\r\n            break;\r\n        default:\r\n            div.classList.add(\"user\");\r\n    }\r\n    const div1 = document.createElement(\"div\");\r\n    const div2 = document.createElement(\"div\");\r\n    div.appendChild(div1);\r\n    div.appendChild(div2);\r\n    const img = document.createElement(\"img\");\r\n    img.classList.add(\"bookimage\");\r\n    img.src = obj.pfpLink;\r\n    div1.appendChild(img);\r\n    const b = document.createElement(\"b\");\r\n    const name = document.createElement(\"p\");\r\n    name.classList.add(\"title\");\r\n    name.appendChild(document.createTextNode(obj.firstName + \" \" + obj.lastName));\r\n    const email = document.createElement(\"p\");\r\n    email.classList.add(\"author\");\r\n    email.appendChild(document.createTextNode(obj.email));\r\n    b.appendChild(name);\r\n    div2.appendChild(b);\r\n    div2.appendChild(email);\r\n    div2.classList.add(\"basic-info\");\r\n    if (page == \"edit-entry\" || page == \"view\") {\r\n        div.addEventListener(\"click\", () => {\r\n            goToPage(\"admin/editUser?id=\" + obj.cardNumber);\r\n        });\r\n        const barcode = document.createElement(\"p\");\r\n        barcode.classList.add(\"barcode\");\r\n        barcode.innerHTML = \"Card Number: \" + obj.cardNumber;\r\n        div2.appendChild(barcode);\r\n    }\r\n    if ((page == \"search\" && num > 0) || page == \"view\") {\r\n        div.id = \"result-number-\" + num;\r\n        const number = document.createElement(\"div\");\r\n        number.classList.add(\"result-number\");\r\n        number.appendChild(document.createTextNode(obj.cardNumber % 2171100000 + \".\"));\r\n        div.appendChild(number);\r\n        const phone = document.createElement(\"p\");\r\n        phone.classList.add(\"medium\");\r\n        phone.appendChild(document.createTextNode(obj.phone));\r\n        div2.appendChild(phone);\r\n        const div3 = document.createElement(\"div\");\r\n        div3.classList.add(\"advanced-info\");\r\n        div.appendChild(div3);\r\n        const address = document.createElement(\"p\");\r\n        address.classList.add(\"subjects\");\r\n        address.appendChild(document.createTextNode(\"Address: \" + obj.address));\r\n        div3.appendChild(address);\r\n        const dateCreated = document.createElement(\"p\");\r\n        dateCreated.classList.add(\"subjects\");\r\n        dateCreated.appendChild(document.createTextNode(\"Date Created: \" + formatDate(obj.dateCreated)));\r\n        div3.appendChild(dateCreated);\r\n        const lastSignIn = document.createElement(\"p\");\r\n        lastSignIn.classList.add(\"subjects\");\r\n        lastSignIn.appendChild(document.createTextNode(\"Last Sign In: \" + formatDate(obj.lastSignIn)));\r\n        div3.appendChild(lastSignIn);\r\n        const lastCheckoutTime = document.createElement(\"p\");\r\n        lastCheckoutTime.classList.add(\"subjects\");\r\n        lastCheckoutTime.appendChild(document.createTextNode(\"Last Checkout Time: \" + formatDate(obj.lastCheckoutTime)));\r\n        div3.appendChild(lastCheckoutTime);\r\n        const checkouts = document.createElement(\"p\");\r\n        checkouts.classList.add(\"description\");\r\n        checkouts.appendChild(document.createTextNode(obj.checkouts));\r\n        div3.appendChild(checkouts);\r\n    }\r\n    return div;\r\n}\r\n\r\nfunction formatDate(date) {\r\n    if (!date) {\r\n        return \"N/A\";\r\n    }\r\n    return date.toDate().toLocaleString(\"en-US\");\r\n}\r\n\r\nvar userDatabase = [];\r\nfunction getAllUsers() {\r\n    return /** @type {Promise<void>} */(new Promise(function (resolve) {\r\n        db.collection(\"users\").where(\"cardNumber\", \">=\", 0).orderBy(\"cardNumber\", \"asc\").get().then((querySnapshot) => {\r\n            userDatabase = [];\r\n            querySnapshot.forEach((doc) => {\r\n                if (!doc.exists()) {\r\n                    console.error(\"user document does not exist\");\r\n                    return;\r\n                }\r\n                userDatabase.push(doc.data());\r\n            });\r\n            resolve();\r\n        });\r\n    }));\r\n}\r\n\r\n\r\nvar inventoryCheck = false;\r\nfunction restartInventory() {\r\n    if (!inventoryCheck) {\r\n        alert(\"Are you sure you want to restart? This will delete your current progress. If you do, you must click the restart button again to confirm.\");\r\n        inventoryCheck = true;\r\n        window.setTimeout(() => {\r\n            inventoryCheck = false;\r\n        }, 5000);\r\n        return;\r\n    }\r\n    db.collection(\"admin\").doc(\"inventory\").set({\r\n        books: []\r\n    });\r\n    alert(\"The Inventory Progress has been reset.\");\r\n    window.location.reload();\r\n}\r\n\r\nexport function setupInventory() {\r\n    loadInventory().then(() => {\r\n        cachedInventory.forEach((barcode) => {\r\n            var current = $(\"#recent-scans\").html();\r\n            $(\"#recent-scans\").html(current + \"<br>\" + barcode);\r\n        });\r\n    });\r\n\r\n    $(\"#restart-inventory\").on(\"click\", () => {\r\n        restartInventory();\r\n    });\r\n\r\n    $(\"#inventory-cancel-button\").on(\"click\", () => {\r\n        cancelInventory();\r\n    });\r\n\r\n    $(\"#inventory-next-button\").on(\"click\", () => {\r\n        continueScanning();\r\n    });\r\n\r\n    $(\"#continue-scanning-button\").on(\"click\", () => {\r\n        continueScanning();\r\n    });\r\n}\r\n\r\nvar cachedInventory = [];\r\nfunction loadInventory() {\r\n    return /** @type {Promise<void>} */(new Promise(function (resolve) {\r\n        db.collection(\"admin\").doc(\"inventory\").get().then((doc) => {\r\n            if (!doc.exists()) {\r\n                console.error(\"inventory document does not exist\");\r\n                return;\r\n            }\r\n            cachedInventory = doc.data().books;\r\n            resolve();\r\n        });\r\n    }));\r\n}\r\n\r\nfunction cancelInventory() {\r\n    $(\"#inventory-book-barcode\").off(\"blur\");\r\n    $(\"#inventory-popup\").hide();\r\n}\r\n\r\nfunction continueScanning() {\r\n    search(\"\", 0, 0, true);\r\n    $(\"#inventory-popup\").show();\r\n    $(\"#inventory-next-button\").hide();\r\n    $(\"#inventory-inner-popup-box\").html(\"<p>Please scan the barcode on the book now.</p>\");\r\n    $(\"#inventory-book-barcode\").blur(() => {\r\n        $(\"#inventory-book-barcode\").focus();\r\n    });\r\n    $(\"#inventory-book-barcode\").focus();\r\n    $(\"#inventory-book-barcode\").off(\"keydown\");\r\n    $(\"#inventory-book-barcode\").on(\"keydown\", (event) => {\r\n        if (event.key === \"Enter\") {\r\n            $(\"#inventory-book-barcode\").off(\"blur\");\r\n            if ($(\"#inventory-book-barcode\").val()) {\r\n                // Some checks should be done to ensure the barcode is valid, the book hasn't been scanned, etc.\r\n                db.collection(\"admin\").doc(\"inventory\").update({\r\n                    books: firebase.firestore.FieldValue.arrayUnion($(\"#inventory-book-barcode\").val())\r\n                });\r\n            }\r\n        }\r\n    });\r\n}\r\n"],"names":[],"sourceRoot":""}