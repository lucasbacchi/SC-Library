{"version":3,"file":"public_js_account_js.bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACI;AACP;AAC8C;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,+CAA+C,CAAC,oEAAoE,CAAC;AACrH;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,CAAC;AACtB;AACA,iBAAiB,CAAC;AAClB;AACA;AACA,2BAA2B,CAAC;AAC5B,+BAA+B,CAAC;AAChC;AACA;AACA;AACA,QAAQ,CAAC;AACT;AACA,2BAA2B,CAAC;AAC5B,uBAAuB,CAAC;AACxB;AACA;AACA,QAAQ,CAAC;AACT;AACA;AACA;AACA;AACA,YAAY,CAAC;AACb;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,eAAe,gEAAa;AAC5B;AACA;AACA;AACA;AACA,QAAQ,CAAC;AACT;AACA,QAAQ,mDAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,CAAC;AACb,SAAS;AACT;AACA,YAAY,CAAC;AACb;AACA,MAAM;AACN,QAAQ,CAAC;AACT;AACA;AACA,wCAAwC,wDAAkB;AAC1D;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,CAAC;AACtB;AACA;AACA;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL,IAAI,CAAC;AACL,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT,KAAK;AACL,IAAI,CAAC;AACL,QAAQ,CAAC;AACT;AACA,KAAK;AACL;AACA;AACA,QAAQ,CAAC;AACT;AACA,YAAY,CAAC;AACb,SAAS;AACT;AACA;AACA;AACA,IAAI,CAAC;AACL,YAAY,CAAC;AACb,YAAY,CAAC;AACb;AACA,KAAK;AACL;AACA;AACA,IAAI,CAAC;AACL,wBAAwB,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mEAAgB;AAC9C;AACA;AACA;AACA,oBAAoB;AACpB,UAAU;AACV;AACA,oBAAoB;AACpB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,wBAAwB,CAAC;AACzB,wBAAwB,CAAC;AACzB,wBAAwB,CAAC;AACzB;AACA,mBAAmB;AACnB;AACA,mBAAmB;AACnB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,eAAe,gEAAa;AAC5B;AACA,QAAQ,CAAC;AACT;AACA;AACA,QAAQ,CAAC;AACT;AACA;AACA,QAAQ,CAAC;AACT;AACA;AACA,QAAQ,CAAC;AACT;AACA;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kFAAkF;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,CAAC;AACb;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA,YAAY,CAAC,8BAA8B,qDAAY;AACvD;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAa;AAC5B;AACA;AACA,MAAM;AACN;AACA;AACA,aAAa,CAAC,8CAA8C,CAAC,gDAAgD,CAAC,4CAA4C,CAAC;AAC3J,YAAY,mDAAa;AACzB,2BAA2B,CAAC;AAC5B,0BAA0B,CAAC;AAC3B,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gCAAgC,CAAC;AACjC,+BAA+B,CAAC;AAChC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,YAAY,CAAC,0CAA0C,CAAC;AACxD,6BAA6B,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA,oBAAoB,+CAAQ,mCAAmC,CAAC;AAChE,kBAAkB;AAClB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,CAAC;AACzB;AACA,oBAAoB,kDAAW;AAC/B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAa;AAChC;AACA,QAAQ,CAAC;AACT;AACA;AACA,wBAAwB,kDAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,SAAS,wDAAkB;AACrC;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAY;AAChC,oBAAoB,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,gBAAgB,yDAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAa;AAC5B;AACA,QAAQ,CAAC,8CAA8C,CAAC;AACxD;AACA,QAAQ,CAAC,4CAA4C,CAAC;AACtD;AACA,QAAQ,CAAC,0CAA0C,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAa;AAC5B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY,gEAAa;AACzB,YAAY,CAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,CAAC;AAC3B,sBAAsB,CAAC;AACvB,uBAAuB,CAAC;AACxB;AACA,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT,MAAM;AACN,mBAAmB,gEAAa;AAChC,2BAA2B,6FAA0C;AACrE;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAAQ;AACxB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,YAAY,CAAC;AACb,YAAY,CAAC;AACb,YAAY,CAAC;AACb,SAAS;AACT,MAAM;AACN;AACA,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,QAAQ,0DAAoB;AAC5B;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA","sources":["webpack://sc-library/./public/js/account.js"],"sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport { goToPage, updateEmail } from \"./ajax\";\r\nimport { buildBookBox } from \"./common\";\r\nimport { currentPage, currentPanel, db, directory, setCurrentPanel } from \"./globals\";\r\n\r\n// TODO: Probably can reference the original directory and can get rid of this at a later date. Leaving this for now/backup.\r\nvar settingsDirectory = [\r\n    \"/overview\",\r\n    \"/notifications\",\r\n    \"/checkouts\",\r\n    \"/security\"\r\n];\r\n\r\n$(window).on(\"resize\", function() {\r\n    alignMenuColumn();\r\n});\r\n\r\n\r\n// Set up a mutation observer to resize the menu column whenver content changes.\r\nconst observer = new MutationObserver(function(mutationList) {\r\n    mutationList.forEach(function(mutation) {\r\n        if (mutation.type != \"attributes\" || (!$(\".menu-column\")[0].contains(mutation.target) && mutation.target != $(\".menu-column\")[0])) {\r\n            alignMenuColumn();\r\n        }\r\n    });\r\n});\r\nconst observerOptions = {\r\n    childList: true,\r\n    attributes: true,\r\n\r\n    // Omit (or set to false) to observe only changes to the parent node\r\n    subtree: true\r\n};\r\n\r\nvar heightCheck = 500;\r\n// Use the height of the main column to stretch the height of the menu column.\r\nfunction alignMenuColumn() {\r\n    // Get the padding above and below the column.\r\n    var paddingStr = $(\".menu-column\").css(\"padding-top\");\r\n    var padding = parseInt(paddingStr.substr(0, paddingStr.indexOf(\"px\")));\r\n    paddingStr = $(\".menu-column\").css(\"padding-bottom\");\r\n    padding += parseInt(paddingStr.substr(0, paddingStr.indexOf(\"px\")));\r\n\r\n    var mainColumnHeight = $(\".main-column\").height();\r\n    var menuColumnFullHeight = $(\".menu-column\").height() + padding;\r\n\r\n    // Set the height of the column. If it is smaller than the content, then it can use default heights.\r\n    if (mainColumnHeight <= menuColumnFullHeight) {\r\n        $(\".menu-column\").css(\"height\", \"\");\r\n    }\r\n    menuColumnFullHeight = $(\".menu-column\").height() + padding;\r\n    mainColumnHeight = $(\".main-column\").height();\r\n\r\n    if (mainColumnHeight > menuColumnFullHeight) {\r\n        $(\".menu-column\").height(mainColumnHeight - padding);\r\n    }\r\n\r\n\r\n    var interval = setInterval(() => {\r\n        if ($(\".menu-column\").height() > heightCheck) {\r\n            heightCheck += 10;\r\n            alignMenuColumn();\r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n    }, 50);\r\n}\r\n\r\n\r\n\r\n\r\nvar firstName;\r\nvar lastName;\r\n// Load correct info for account\r\nexport function setupAccountPage(pageQuery, goingBack = false) {\r\n    var user = firebase.auth().currentUser;\r\n    if (user) {\r\n\r\n        var email = user.email;\r\n        email = email.substr(0, email.indexOf(\"@\")) + \"\\u200B\" + email.substr(email.indexOf(\"@\"), email.length);\r\n        $(\"#account-page-email\").text(email);\r\n        // Get the stored first and last name from the database\r\n        db.collection(\"users\").doc(user.uid).get().then((doc) => {\r\n            if (!doc.exists) {\r\n                console.error(\"The user document could not be found.\");\r\n                return;\r\n            }\r\n            firstName = doc.data().firstName;\r\n            lastName = doc.data().lastName;\r\n            accountOverviewSetup(doc.data().firstName, doc.data().lastName);\r\n            $(\"#account-page-name\").text(firstName + \" \" + lastName);\r\n        });\r\n        if (user.photoURL != null) {\r\n            $(\"#account-page-image\").attr(\"src\", user.photoURL);\r\n        }\r\n    } else {\r\n        $(\"#settings-column\").html(\"No user is signed in. To sign in, please click <a onclick='javascript:goToPage(\\\"login\\\")'>here</a>.\");\r\n    }\r\n\r\n    if (pageQuery.substring(1) != \"\" && directory.includes(\"/account/\" + pageQuery.substring(1))) {\r\n        goToSettingsPanel(pageQuery.substring(1), goingBack);\r\n    } else {\r\n        goToSettingsPanel(\"overview\", goingBack);\r\n        // TODO: Figure out what was put in the URL bar to be processed here.... What page puts it there....\r\n        accountOverviewSetup(\"\", \"\", pageQuery.substr(pageQuery.indexOf(\"=\")+1, pageQuery.length));\r\n    }\r\n\r\n    // Create an \"Event Listener\" for mutations to the settings column\r\n    observer.observe($(\".main-column\")[0], observerOptions);\r\n\r\n    // Create Event Listeners to handle PFP changes\r\n    // All are required to handle leaving the element and coming back again\r\n    $(\"#account-page-image\").on(\"mouseover\", () => {\r\n        showAccountImageOverlay();\r\n    });\r\n    $(\"#account-image-overlay\").on(\"mouseleave\", () => {\r\n        $(\"#account-image-overlay\").css(\"opacity\", \"0\");\r\n        $(\"#account-image-overlay\").delay(300).hide(0);\r\n    });\r\n    $(\"#account-image-overlay\").on(\"mouseover\", () => {\r\n        $(\"#account-image-overlay\").clearQueue().stop();\r\n        showAccountImageOverlay();\r\n    });\r\n\r\n    function showAccountImageOverlay() {\r\n        $(\"#account-image-overlay\").show();\r\n        setTimeout(() => {\r\n            $(\"#account-image-overlay\").css(\"opacity\", \"1\");\r\n        }, 5);\r\n    }\r\n\r\n    // If a user clicks the button to change their pfp, click the input button\r\n    $(\"#account-image-overlay\").on(\"click\", () => {\r\n        if ($(\"#file-input\")) {\r\n            $(\"#file-input\").trigger(\"click\");\r\n        }\r\n    });\r\n\r\n    // When there is a change to the input, upload the file\r\n    $(\"#file-input\").on(\"change\", function() {\r\n        let fileInput = $(\"#file-input\")[0];\r\n        // @ts-ignore\r\n        if (!fileInput.files) {\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        const file = fileInput.files[0];\r\n        var userSpecificRef = firebase.storage().ref().child(\"users\");\r\n        var meta;\r\n        if (file.type == \"image/jpg\") {\r\n            userSpecificRef = userSpecificRef.child(user.uid + \"/pfp.jpg\");\r\n            meta = {contentType: \"image/jpeg\"};\r\n        } else if (file.type == \"image/png\") {\r\n            userSpecificRef = userSpecificRef.child(user.uid + \"/pfp.png\");\r\n            meta = {contentType: \"image/png\"};\r\n        } else {\r\n            alert(\"That file type is not supported. Please upload a JPG or PNG file.\");\r\n            return;\r\n        }\r\n        userSpecificRef.put(file, meta).then(() => {\r\n            console.log(\"Uploaded the file!\");\r\n            userSpecificRef.getDownloadURL().then((url) => {\r\n                user.updateProfile({\r\n                    photoURL: url\r\n                  }).then(function() {\r\n                    if (user.photoURL != null) {\r\n                        $(\"#account-page-image\").attr(\"src\", user.photoURL);\r\n                        $(\"#large-account-image\").attr(\"src\", user.photoURL);\r\n                        $(\"#small-account-image\").attr(\"src\", user.photoURL);\r\n                    }\r\n                  }).catch(function(error) {\r\n                    console.error(error);\r\n                  });\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nfunction accountOverviewSetup(firstName, lastName, email) {\r\n    var user = firebase.auth().currentUser;\r\n    if (firstName && firstName != \"\") {\r\n        $(\"#setting-first-name\").val(firstName);\r\n    }\r\n    if (lastName && lastName != \"\") {\r\n        $(\"#setting-last-name\").val(lastName);\r\n    }\r\n    if (email && email != \"\") {\r\n        $(\"#setting-email\").val(email);\r\n    }\r\n    if (!user.emailVerified) {\r\n        $(\"#email-verified\").show();\r\n    }\r\n\r\n    $(\".save-button\").on(\"click\", () => {\r\n        updateAccount();\r\n    });\r\n}\r\n\r\nfunction accountCheckoutsSetup() {\r\n    var checkouts = getCheckouts();\r\n    createCheckouts(checkouts, \"checkouts\");\r\n}\r\n\r\nfunction accountNotificationsSetup() {\r\n    $(\".save-button\").on(\"click\", () => {\r\n        updateAccount();\r\n    });\r\n}\r\n\r\nfunction accountSecuritySetup() {\r\n    $(\"#change-password\").on(\"click\", () => {\r\n        changePassword();\r\n    });\r\n}\r\n\r\n// The following two comments are there because they are in the wrong format and were causing errors\r\nfunction getCheckouts() {\r\n    return [/*{photoURL: \"img/favicon.ico\", title: \"The Bible\", author: \"Jesus, I guess\", due: 4}*/];\r\n}\r\n\r\nfunction createCheckouts(books, str) {\r\n    if (books.length == 0) {\r\n        if (str == \"checkouts\") {\r\n            const p = document.createElement(\"p\");\r\n            p.appendChild(document.createTextNode(\"You have no books checked out.\"));\r\n            $(\"#checkouts\")[0].appendChild(p);\r\n        }\r\n    }\r\n    for (let i = 0; i < books.length; i++) {\r\n        if (str == \"checkouts\")\r\n            $(\"#checkouts\")[0].appendChild(buildBookBox(books[i], \"account\", books[i].due));\r\n    }\r\n}\r\n\r\n// Runs when the user clicks the Save button on the account page\r\nfunction updateAccount() {\r\n    var user = firebase.auth().currentUser;\r\n    if (!checkForChangedFields()) {\r\n        alert(\"There are no changes to save.\");\r\n    } else {\r\n        var nameError = false;\r\n        // If the names were changed, update them.\r\n        if (($(\"#setting-first-name\").val() != firstName && $(\"#setting-first-name\").val() != undefined) || ($(\"#setting-last-name\").val() != lastName && $(\"#setting-last-name\").val() != undefined)) {\r\n            db.collection(\"users\").doc(user.uid).update({\r\n                firstName: $(\"#setting-first-name\").val(),\r\n                lastName: $(\"#setting-last-name\").val()\r\n            }).catch((error) => {\r\n                nameError = true;\r\n                alert(\"An error has occured. Please try again later.\");\r\n                console.error(error);\r\n            }).then(function() {\r\n                if (!nameError) {\r\n                    // Assuming there was no problem with the update, set the new values.\r\n                    firstName = $(\"#setting-first-name\").val();\r\n                    lastName = $(\"#setting-last-name\").val();\r\n                    alert(\"Your name was saved successfully.\");\r\n                }\r\n            });\r\n        }\r\n        var emailError = false;\r\n        // If the email was changed update it.\r\n        if ($(\"#setting-email\").val() != user.email && $(\"#setting-email\").val() != undefined) {\r\n            user.updateEmail($(\"#setting-email\").val().toString()).catch((error) => {\r\n                emailError = true;\r\n                // If the user needs to reauthenticate:\r\n                if (error.code == \"auth/requires-recent-login\") {\r\n                    alert(\"You must sign in again to complete this opperation.\");\r\n                    // Send them to the login page with a query\r\n                    goToPage(\"login?redirect=account&email=\" + $(\"#setting-email\").val());\r\n                } else {\r\n                    alert(\"An error has occured. Please try again later.\");\r\n                    console.error(error);\r\n                }\r\n            }).then(function() {\r\n                if (!emailError) {\r\n                    let email = user.email;\r\n                    if (!user.emailVerified) {\r\n                        $(\"#email-verified\").show();\r\n                    }\r\n                    updateEmail(email);\r\n                    alert(\"Your email was saved successfully.\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n    const xhttp = new XMLHttpRequest();\r\n    function goToSettingsPanel(newPanel, goingBack = false) {\r\n        var user = firebase.auth().currentUser;\r\n\r\n        $(\"#settings-column\").removeClass(\"fade\");\r\n\r\n        newPanel = \"/\" + newPanel;\r\n        if (newPanel == currentPanel) {\r\n            // TODO: Remove after I know it's not breaking anything...\r\n            console.log(\"The user attempted to view the same account panel twice and it was prevented.\");\r\n            return;\r\n        }\r\n\r\n        if (settingsDirectory.includes(newPanel)){\r\n            xhttp.open(\"GET\", \"/content/account\" + newPanel + \".html\", true);\r\n        } else if (directory.includes(\"/account\" + newPanel)) {\r\n            xhttp.open(\"GET\", \"/content/account\" + newPanel, true);\r\n        } else if (settingsDirectory.includes(newPanel.substr(0, newPanel.indexOf(\".\")))) {\r\n            xhttp.open(\"GET\", \"/content/account\" + newPanel, true);\r\n        } else {\r\n            xhttp.open(\"GET\", \"/content/404.html\", true);\r\n        }\r\n        xhttp.send();\r\n\r\n        // Set the content of the page\r\n        xhttp.onreadystatechange = function() {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                if (currentPanel != newPanel) {\r\n                    $(\"#settings-column\").addClass(\"fade\");\r\n                }\r\n\r\n                document.getElementById(\"settings-column\").innerHTML = xhttp.responseText;\r\n                // Remove Placeholder Height\r\n                document.getElementById(\"settings-column\").style.height = \"\";\r\n\r\n                if (newPanel == \"/overview\") {\r\n                    accountOverviewSetup(firstName, lastName, user.email);\r\n                }if (newPanel == \"/checkouts\") {\r\n                    accountCheckoutsSetup();\r\n                }if (newPanel == \"/notifications\") {\r\n                    accountNotificationsSetup();\r\n                }if (newPanel == \"/security\") {\r\n                    accountSecuritySetup();\r\n                }\r\n\r\n                alignMenuColumn();\r\n\r\n                if (goingBack == false) {\r\n                    window.history.pushState({}, \"\", \"/account?\" + newPanel.substring(1));\r\n                }\r\n\r\n                setCurrentPanel(newPanel);\r\n            }\r\n        };\r\n    }\r\n\r\n// Returns true if the user has unsaved changes, otherwise, returns false\r\nfunction checkForChangedFields() {\r\n    var answer = false;\r\n    var user = firebase.auth().currentUser;\r\n\r\n    if ($(\"#setting-first-name\").val() != firstName && $(\"#setting-first-name\").val() != undefined)\r\n        answer = true;\r\n    if ($(\"#setting-last-name\").val() != lastName && $(\"#setting-last-name\").val() != undefined)\r\n        answer = true;\r\n    if ($(\"#setting-email\").val() != user.email && $(\"#setting-email\").val() != undefined)\r\n        answer = true;\r\n    return answer;\r\n}\r\n\r\n\r\n/**\r\n * Sends an email verification to the user.\r\n */\r\nfunction sendEmailVerification() {\r\n    var user = firebase.auth().currentUser;\r\n    user.sendEmailVerification().then(function() {\r\n        alert(\"Email Verification Sent! Please check your email!\");\r\n    });\r\n    var count = 0;\r\n    // After a user sends a verification email, check ever 2 seconds to see if it went through.\r\n    // Cancel it if it goes too long.\r\n    var interval = setInterval(() => {\r\n        if (firebase.auth().currentUser.emailVerified) {\r\n            $(\"#email-verified\").hide();\r\n            clearInterval(interval);\r\n        }\r\n        count++;\r\n        if (count > 500) {\r\n            clearInterval(interval);\r\n        }\r\n    }, 2000);\r\n}\r\n\r\n\r\n\r\n\r\nfunction changePassword() {\r\n    let currentPassword = $(\"#current-password\").val().toString();\r\n    let newPassword = $(\"#new-password\").val().toString();\r\n    if (newPassword != $(\"#confirm-new-password\").val()){\r\n        alert(\"The new passwords do not match!\");\r\n        $(\"#current-password\").val(\"\");\r\n        $(\"#new-password\").val(\"\");\r\n        $(\"#confirm-new-password\").val(\"\");\r\n    } else if (newPassword.length >= 4) {\r\n        var user = firebase.auth().currentUser;\r\n        const credential = firebase.auth.EmailAuthProvider.credential(user.email, currentPassword);\r\n        user.reauthenticateWithCredential(credential).then(function() {\r\n            // User re-authenticated.\r\n            user.updatePassword(newPassword).then(() => {\r\n                // Update successful\r\n                alert(\"Your password was succesfully changed\");\r\n                goToPage(\"\");\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n        }).catch(function(error) {\r\n            // An error happened.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            if (errorCode === \"auth/wrong-password\") {\r\n                alert(\"The current password that you entered was incorrect.\");\r\n            } else {\r\n                alert(errorMessage);\r\n            }\r\n            console.error(error);\r\n            $(\"#current-password\").val(\"\");\r\n            $(\"#new-password\").val(\"\");\r\n            $(\"#confirm-new-password\").val(\"\");\r\n        });\r\n    } else {\r\n        alert(\"You must enter a longer password\");\r\n        $(\"#current-password\").val(\"\");\r\n        $(\"#new-password\").val(\"\");\r\n        $(\"#confirm-new-password\").val(\"\");\r\n    }\r\n}\r\n\r\n\r\n// If the user attempts to leave, let them know if they have unsaved changes\r\n$(window).on(\"beforeunload\", function(event) {\r\n    if (checkForChangedFields()) {\r\n        event.preventDefault();\r\n        return \"You have unsaved changes! Please save changes before leaving!\";\r\n    }\r\n});\r\n\r\n// Catch History Events such as forward and back and then go to those pages\r\nwindow.addEventListener(\"popstate\", function() {\r\n    if (currentPage.includes(\"account\") && document.location.pathname.includes(\"account\")) {\r\n        goToSettingsPanel(document.location.search.substr(document.location.search.indexOf(\"?\") + 1, document.location.search.length), true);\r\n    } /* Hopefully, this is no longer needed\r\n    else {\r\n        handleHistoryPages();\r\n    }*/\r\n});\r\n\r\nconsole.log(\"account.js has Loaded!\");\r\n"],"names":[],"sourceRoot":""}