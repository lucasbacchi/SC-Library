{"version":3,"file":"public_js_signIn_js.bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACc;AACjB;AACI;AAC5C;AACO;AACP,IAAI,CAAC;AACL;AACA;AACA;AACA,KAAK;AACL,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,qDAAY;AAC/B;AACA;AACA;AACA,uBAAuB,qDAAY;AACnC;AACA;AACA,mBAAmB,gEAAa;AAChC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,YAAY,+CAAQ;AACpB,SAAS;AACT,MAAM;AACN;AACA;AACA,QAAQ,+CAAQ;AAChB;AACA;AACA;AACA;AACA,QAAQ,iDAAW;AACnB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,gBAAgB,+CAAQ;AACxB;AACA,SAAS,gBAAgB;AACzB,MAAM,SAAS,iDAAW;AAC1B;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAa;AAChC;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAa;AAC7B;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,oBAAoB,CAAC;AACrB,oBAAoB,CAAC;AACrB;AACA,iBAAiB;AACjB,cAAc;AACd;AACA,mCAAmC,6FAA0C;AAC7E;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,oBAAoB,CAAC;AACrB,oBAAoB,CAAC;AACrB,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B,gEAAa;AACxC,gCAAgC,mDAAa;AAC7C,6BAA6B,mEAAgB;AAC7C;AACA;AACA;AACA,oBAAoB,uDAAiB;AACrC,4CAA4C,mDAAa;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,wBAAwB,4DAAqB;AAC7C;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gEAAa;AACjB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gEAAa;AACjB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA","sources":["webpack://sc-library/./public/js/signIn.js"],"sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport { goToPage, updateUserAccountInfo } from \"./ajax\";\r\nimport { findURLValue } from \"./common\";\r\nimport { currentPage, db } from \"./globals\";\r\n\r\nexport function setupSignIn(pageQueryInput) {\r\n    $(\"#submit, .login > input\").keydown(function(event) {\r\n        if (event.keyCode === 13) {\r\n            signInSubmit(pageQueryInput);\r\n        }\r\n    });\r\n    $(\"#password-reset\").on(\"click\", () => {\r\n        sendPasswordReset();\r\n    });\r\n}\r\n\r\nfunction authRedirect(pageQuery) {\r\n    // Find the redirect path in the query\r\n    var redirect = findURLValue(pageQuery, \"redirect\");\r\n\r\n    // If they are being redirected with an email (to the account page)\r\n    if (pageQuery.includes(\"email\")) {\r\n        var newEmail = findURLValue(pageQuery, \"email\");\r\n\r\n        var emailError = false;\r\n        var user = firebase.auth().currentUser;\r\n        // Attempt to update the account\r\n        user.updateEmail(newEmail).catch((error) => {\r\n            emailError = true;\r\n            alert(\"There was an error updating your email. Please try again later.\");\r\n            console.error(error);\r\n        }).then(function() {\r\n            if (!emailError) {\r\n                alert(\"Your email was saved successfully.\");\r\n            }\r\n            goToPage(redirect + \"?email=\" + newEmail);\r\n        });\r\n    } else {\r\n        // If they do not have an email in the query\r\n        // TO DO: Add additional redirects as needed\r\n        goToPage(redirect);\r\n    }\r\n}\r\n\r\nfunction signInSubmit(pageQuery = \"\") {\r\n    if (currentPage == '/login') {\r\n        var reAuth;\r\n        if (pageQuery.length > 1) {\r\n            reAuth = true;\r\n        } else {\r\n            reAuth = false;\r\n        }\r\n        signIn(reAuth).then(function(reAuth) {\r\n            if (reAuth) {\r\n                authRedirect(pageQuery);\r\n            } else {\r\n                goToPage(\"\");\r\n            }\r\n        }).catch(() => {});\r\n    } else if (currentPage == '/signup') {\r\n        handleSignUp().then(function() {\r\n            authRedirect(pageQuery);\r\n        }).catch(() => {\r\n            console.warn(\"Signup failed (likely because the user failed validation)\");\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction signIn(reAuth = false) {\r\n    return new Promise(function(resolve, reject) {\r\n        var user = firebase.auth().currentUser;\r\n        if (user && !reAuth) {\r\n            alert(\"Another user is currently signed in. Please sign out first.\");\r\n        } else {\r\n            var email = document.getElementById('email').value;\r\n            var password = document.getElementById('password').value;\r\n            if (email.length < 4) {\r\n                alert('Please enter an email address.');\r\n                reject();\r\n            }\r\n            if (password.length < 4) {\r\n                alert('Please enter a password.');\r\n                reject();\r\n            }\r\n            if (!reAuth) {\r\n                // Sign in with email and pass.\r\n                firebase.auth().signInWithEmailAndPassword(email, password).then(function() {\r\n                    resolve(reAuth);\r\n                }).catch(function(error) {\r\n                    // Handle Errors here.\r\n                    var errorCode = error.code;\r\n                    var errorMessage = error.message;\r\n                    if (errorCode === 'auth/wrong-password') {\r\n                        alert('Wrong password.');\r\n                    } else {\r\n                        alert(errorMessage);\r\n                    }\r\n                    console.error(error);\r\n                    $('#email').val('');\r\n                    $('#password').val('');\r\n                    reject();\r\n                });\r\n            } else {\r\n                // Reauthenticate\r\n                const credential = firebase.auth.EmailAuthProvider.credential(email, password);\r\n                user.reauthenticateWithCredential(credential).then(function() {\r\n                    // User re-authenticated.\r\n                    resolve();\r\n                }).catch(function(error) {\r\n                    // An error happened.\r\n                    var errorCode = error.code;\r\n                    var errorMessage = error.message;\r\n                    if (errorCode === 'auth/wrong-password') {\r\n                        alert('Wrong password.');\r\n                    } else {\r\n                        alert(errorMessage);\r\n                    }\r\n                    console.error(error);\r\n                    $('#email').val('');\r\n                    $('#password').val('');\r\n                });\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Handles the sign up button press.\r\n */\r\nfunction handleSignUp() {\r\n    return new Promise(function (resolve, reject) {\r\n        var firstName = document.getElementById('firstName').value;\r\n        var lastName = document.getElementById('lastName').value;\r\n        var email = document.getElementById('email').value;\r\n        var phone = document.getElementById('phone').value;\r\n        var address = document.getElementById('address').value;\r\n        var town = document.getElementById('town').value;\r\n        var state = document.getElementById('state').value;\r\n        var zip = document.getElementById('zip').value;\r\n        var password = document.getElementById('password').value;\r\n        var confrimPassword = document.getElementById('confirm-password').value;\r\n        if (email.length < 4) {\r\n            alert('Please enter an email address.');\r\n            reject();\r\n            return;\r\n        }\r\n        if (password.length < 4) {\r\n            alert('Please enter a longer password.');\r\n            reject();\r\n            return;\r\n        }\r\n        if (password != confrimPassword) {\r\n            alert('Your passwords do not match.');\r\n            reject();\r\n            return;\r\n        }\r\n        if (phone < 10) {\r\n            alert('Please enter a valid phone number');\r\n            reject();\r\n            return;\r\n        }\r\n        if (address < 6) {\r\n            alert('Please enter a valid address');\r\n            reject();\r\n            return;\r\n        }\r\n        if (town < 3) {\r\n            alert('Please enter a valid address');\r\n            reject();\r\n            return;\r\n        }\r\n        if (state.length != 2) {\r\n            alert('Please enter the state as two letters (ex. MA)');\r\n            reject();\r\n            return;\r\n        }\r\n        if (zip.length != 5) {\r\n            alert('Please enter a valid zip code');\r\n            reject();\r\n            return;\r\n        }\r\n        if (firstName.length < 1) {\r\n            alert('Please enter a first name.');\r\n            reject();\r\n            return;\r\n        }\r\n        if (lastName.length < 1) {\r\n            alert('Please enter a last name.');\r\n            reject();\r\n            return;\r\n        }\r\n        var signUpError = false;\r\n        // Create user with email and pass, then logs them in.\r\n        firebase.auth().createUserWithEmailAndPassword(email, password).catch(function(error) {\r\n            // Handle Errors here.\r\n            signUpError = true;\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            if (errorCode == 'auth/weak-password') {\r\n                alert('The password is too weak.');\r\n            } else {\r\n                alert(errorMessage);\r\n            }\r\n            console.error(error);\r\n            reject();\r\n        }).then(function() {\r\n            if (!signUpError) {\r\n                var user = firebase.auth().currentUser;\r\n                var usersPath = db.collection(\"users\");\r\n                var pfpRef = firebase.storage().ref().child(\"/public/default-user.jpg\");\r\n                pfpRef.getDownloadURL().then((pfpLink) => {\r\n                    user.photoURL = pfpLink;\r\n                    // Run a Transaction to ensure that the correct barcode is used. (Atomic Transation)\r\n                    db.runTransaction((transaction) => {\r\n                        var cloudVarsPath = db.collection(\"config\").doc(\"writable_vars\");\r\n                        // Get the variable stored in the writable_vars area\r\n                        return transaction.get(cloudVarsPath).then((doc) => {\r\n                            if (!doc.exists) {\r\n                                throw \"Document does not exist!\";\r\n                            }\r\n                            // Save the max value and incriment it by one.\r\n                            var newCardNumber = doc.data().maxCardNumber + 1;\r\n                            var dateCreated = new Date();\r\n                            // Set the document to exist in the users path\r\n                            transaction.set(usersPath.doc(user.uid), {\r\n                                firstName: firstName,\r\n                                lastName: lastName,\r\n                                address: address + \", \" + town + \", \" + state + \" \" + zip,\r\n                                phone: phone,\r\n                                email: email,\r\n                                cardNumber: newCardNumber,\r\n                                pfpLink: pfpLink,\r\n                                checkouts: [],\r\n                                notificationsOn: true,\r\n                                dateCreated: dateCreated,\r\n                                lastSignIn: dateCreated,\r\n                                lastCheckoutTime: null\r\n                            });\r\n                            // Update the cloud var to contain the next card number value\r\n                            transaction.update(cloudVarsPath, {\r\n                                maxCardNumber: newCardNumber\r\n                            });\r\n                            return newCardNumber;\r\n                        });\r\n                    }).then((newCardNumber) => {\r\n                        // After both writes complete, send the user to the edit page and take it from there.\r\n                        console.log(\"New User Created with card number: \", newCardNumber);\r\n                        updateUserAccountInfo();\r\n                        sendEmailVerification();\r\n                        resolve();\r\n                    }).catch((err) => {\r\n                        console.error(err);\r\n                        reject(err);\r\n                    });\r\n                });\r\n                \r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Sends an email verification to the user.\r\n */\r\nfunction sendEmailVerification() {\r\n    firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n        alert('Email Verification Sent! Please check your email!');\r\n    });\r\n}\r\n\r\nfunction sendPasswordReset() {\r\n    var email = document.getElementById('email').value;\r\n    if (!email.includes('@') || email.lastIndexOf('.') < email.indexOf('@')){\r\n        alert(\"Please enter a valid email into the Email box above. Then try again.\");\r\n        return;\r\n    }\r\n    firebase.auth().sendPasswordResetEmail(email).then(function() {\r\n        alert('Password Reset Email Sent!');\r\n    }).catch(function(error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        if (errorCode == 'auth/invalid-email') {\r\n            alert(errorMessage);\r\n        } else if (errorCode == 'auth/user-not-found') {\r\n            alert(errorMessage);\r\n        }\r\n        console.error(error);\r\n    });\r\n}\r\n\r\nconsole.log(\"signIn.js Loaded!\");\r\n"],"names":[],"sourceRoot":""}