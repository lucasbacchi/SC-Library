rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/admin/private_vars).data.admins;
    }
    match /books/{document} {
      allow read: if true;
    }
    match /config/cloud_vars {
      allow read: if true;
    }
    match /config/writable_vars {
      allow read: if true;
      allow write: if request.auth != null && request.resource.data.maxCardNumber > get(/databases/$(database)/documents/config/writable_vars).data.maxCardNumber;
    }
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
    match /mail/{mailID} {
    	allow create: if request.resource.data.to == "library@southchurch.com" && (request.resource.data.cc == null || request.resource.data.cc == request.auth.token.email) && (request.resource.data.bcc == null || request.resource.data.bcc == request.auth.token.email);
      allow create: if resource.data.uid == request.auth.uid && request.resource.data.to == request.auth.token.email && (request.resource.data.cc == "library@southchurch.com" || request.resource.data.cc == null) && (request.resource.data.bcc == "library@southchurch.com" || request.resource.data.bcc == null);
      allow read: if (resource.data.to == request.auth.token.email || resource.data.cc == request.auth.token.email || resource.data.bcc == request.auth.token.email || resource.data.uid == request.auth.uid);
    }
  }
}