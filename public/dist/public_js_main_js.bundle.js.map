{"version":3,"file":"public_js_main_js.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAC2C;AACR;AACA;AACL;AACK;AACF;AACI;AACrC;AACA;AAC6C;AACX;AACc;AACoD;AACpG;AACA;AACA;AACA;AACO;AACP;AACA,IAAI,CAAC;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sBAAsB,CAAC;AACvB;AACA,IAAI,+CAAM;AACV,QAAQ,+CAAQ;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,kDAAY;AACpB;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,mDAAmD,yDAAmB;AACtE,mDAAmD,kDAAY;AAC/D;AACA;AACA,8CAA8C,kDAAY,kCAAkC,kDAAY;AACxG;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,uBAAuB,kDAAY;AACnC,YAAY,CAAC,6BAA6B,qDAAY;AACtD;AACA,MAAM;AACN;AACA,QAAQ,4DAAO,CAAC,0DAAK,CAAC,+DAAU,CAAC,wCAAE,YAAY,0DAAK,oBAAoB,4DAAO,mBAAmB,0DAAK;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAM,CAAC,wDAAG,CAAC,wCAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA,wBAAwB,CAAC,6BAA6B,qDAAY;AAClE;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA","sources":["webpack://sc-library/./public/js/main.js"],"sourcesContent":["// I'm not sure if we need to reimport everything on each file\r\n// eslint-disable-next-line\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/analytics\";\r\nimport \"firebase/compat/app-check\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\nimport \"firebase/compat/performance\";\r\n\r\n\r\nimport { bookDatabase, db } from \"./globals\";\r\nimport { goToPage } from \"./ajax\";\r\nimport { buildBookBox, search } from \"./common\";\r\nimport { collection, doc, getDoc, getDocs, limit, orderBy, query, where } from \"firebase/firestore\";\r\n\r\n\r\n\r\n\r\nexport function setupMain() {\r\n    homeBookBoxes();\r\n    $(\"#search-input\").on(\"keydown\", (event) => {\r\n        if (event.key === \"Enter\") {\r\n            homePageSearch();\r\n        }\r\n    });\r\n\r\n    $(\"#home-page-search\").on(\"click\", () => {\r\n        homePageSearch();\r\n    });\r\n}\r\n\r\n\r\nfunction homePageSearch() {\r\n    var searchQuery = $('#search-input').val();\r\n\r\n    search(searchQuery).then((searchResultsArray) => {\r\n        goToPage('search?query=' + searchQuery, false, searchResultsArray);\r\n    });\r\n}\r\n\r\n\r\nfunction homeBookBoxes() {\r\n    if (bookDatabase) {\r\n        // Don't wait for the database and save ourselves a read request\r\n        var values = [];\r\n        let count = 0;\r\n        for (let i = 0; i < 9; i++) {\r\n            var rand1 = Math.floor(Math.random() * bookDatabase.length);\r\n            var rand2 = Math.floor(Math.random() * bookDatabase[rand1].books.length);\r\n            var bookNumber = rand2 + rand1 * 100;\r\n            // TODO: Prevent duplicate books (with different barcode numbers)\r\n            if (values.indexOf(rand2) > -1 || bookDatabase[rand1].books[rand2].isDeleted || bookDatabase[rand1].books[rand2].isHidden) {\r\n                i--;\r\n            } else {\r\n                values.push(bookNumber);\r\n            }\r\n            count++;\r\n            if (count > 10000) {\r\n                console.error(\"The book randomizer is very broken. Giving up for now.\");\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < 9; i++) {\r\n            var book = bookDatabase[Math.floor(values[i] / 100)].books[values[i] % 100];\r\n            $('div#books')[0].appendChild(buildBookBox(book, \"main\"));\r\n        }\r\n    } else {\r\n        // Got get the largest doc to figure out how many total books there are.\r\n        getDocs(query(collection(db, \"books\"), where(\"order\", \">=\", 0), orderBy(\"order\", \"desc\"), limit(1))).then((querySnapshot) => {\r\n            querySnapshot.forEach((docSnap) => {\r\n                if (!docSnap.exists()) {\r\n                    console.error(\"books document does not exist\");\r\n                    return;\r\n                }\r\n                var docs = docSnap.data().order;\r\n                if (docSnap.data().books.length < 25 && docSnap.data().order != 0) {\r\n                    docs--;\r\n                }\r\n                var rand = Math.floor(Math.random() * docs);\r\n                rand = \"0\" + rand;\r\n                if (rand.length == 2) rand = \"0\" + rand;\r\n                getDoc(doc(db, \"books/\" + rand)).then((docSnap) => {\r\n                    if (!docSnap.exists()) {\r\n                        console.error(\"books \" + rand + \" does not exist\");\r\n                        return;\r\n                    }\r\n                    var values = [];\r\n                    let count = 0;\r\n                    for (let i = 0; i < 9; i++) {\r\n                        var random = Math.floor(Math.random() * docSnap.data().books.length);\r\n                        // TODO: Prevent duplicate books (with different barcode numbers)\r\n                        if (values.indexOf(random) > -1 || docSnap.data().books[random].isDeleted || docSnap.data().books[random].isHidden) {\r\n                            i--;\r\n                        } else {\r\n                            values.push(random);\r\n                        }\r\n                        count++;\r\n                        if (count > 10000) {\r\n                            console.error(\"The book randomizer is very broken. Giving up for now.\");\r\n                            return;\r\n                        }\r\n                    }\r\n                    for (let i = 0; i < 9; i++) {\r\n                        var book = docSnap.data().books[values[i]];\r\n                        $('div#books')[0].appendChild(buildBookBox(book, \"main\"));\r\n                    }\r\n                }).catch((error) => {\r\n                    console.error(\"There was an issue getting the random book doc\", error);\r\n                });\r\n            });\r\n        }).catch((error) => {\r\n            console.error(\"There was an error getting the last book doc\", error);\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconsole.log(\"main.js Loaded!\");\r\n"],"names":[],"sourceRoot":""}